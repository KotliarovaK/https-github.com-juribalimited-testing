// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DashworksTestAutomation.Tests.Senior.Senior_CreatingProjects
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CreateComputerScheduledProject")]
    public partial class CreateComputerScheduledProjectFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ComputerScheduledProject.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CreateComputerScheduledProject", "\tRuns Project related tests", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line 5
 testRunner.Given("User is logged in to the Projects", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.Then("\"Projects Home\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Projects_CreateComputerScheduledProject")]
        [NUnit.Framework.CategoryAttribute("ProjectsOnSenior")]
        [NUnit.Framework.CategoryAttribute("Projects_Administration")]
        [NUnit.Framework.CategoryAttribute("ComputerScheduledProject")]
        [NUnit.Framework.CategoryAttribute("Cleanup")]
        public virtual void Projects_CreateComputerScheduledProject()
        {
            System.Exception lastException = null;
            for (int i = 0; (i <= 1); i = (i + 1))
            {
                try
                {
                    this.Projects_CreateComputerScheduledProjectInternal();
                    return;
                }
                catch (System.Exception exc)
                {
                    lastException = exc;
                }
                if (((i + 1)
                     <= 1))
                {
                    testRunner.OnScenarioEnd();
                }
            }
            if ((lastException != null))
            {
                throw lastException;
            }
        }

        private void Projects_CreateComputerScheduledProjectInternal()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Projects_CreateComputerScheduledProject", null, new string[] {
                        "ProjectsOnSenior",
                        "Projects_Administration",
                        "ComputerScheduledProject",
                        "Cleanup"});
#line 9
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line 10
 testRunner.When("User clicks create Project button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("\"Create Project\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "ProjectShortName",
                        "ProjectDescription",
                        "ProjectTypeString"});
            table1.AddRow(new string[] {
                        "000 ComputerScheduledProject",
                        "Computer",
                        "ComputerScheduledProject",
                        "ComputerScheduledProject"});
#line 12
 testRunner.When("User creates Project", ((string)(null)), table1, "When ");
#line 15
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.When("User clicks \"Create Project\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 18
 testRunner.Then("\"Manage Project Details\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
 testRunner.When("User navigate to Manage link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.And("User select \"Manage Users\" option in Management Console", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Username",
                        "FullName",
                        "Password",
                        "ConfirmPassword",
                        "RolesString"});
            table2.AddRow(new string[] {
                        "AAA for removing",
                        "for removing",
                        "1234qwer",
                        "1234qwer",
                        ""});
#line 21
 testRunner.Then("User create a new Dashworks User", ((string)(null)), table2, "Then ");
#line 24
 testRunner.And("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("created User is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.When("User removes created User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.Then("selected User was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Username",
                        "FullName",
                        "Password",
                        "ConfirmPassword",
                        "RolesString"});
            table3.AddRow(new string[] {
                        "AAA0ComputerScheduledProject",
                        "ComputerScheduledProject 0",
                        "1234qwer",
                        "1234qwer",
                        ""});
#line 28
 testRunner.Then("User create a new Dashworks User", ((string)(null)), table3, "Then ");
#line 31
 testRunner.And("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And("created User is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Username",
                        "FullName",
                        "Password",
                        "ConfirmPassword",
                        "RolesString"});
            table4.AddRow(new string[] {
                        "AAA1ComputerScheduledProject",
                        "ComputerScheduledProject 1",
                        "1234qwer",
                        "1234qwer",
                        ""});
#line 33
 testRunner.And("User create a new Dashworks User", ((string)(null)), table4, "And ");
#line 36
 testRunner.And("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And("created User is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Username",
                        "FullName",
                        "Password",
                        "ConfirmPassword",
                        "RolesString"});
            table5.AddRow(new string[] {
                        "AAA2ComputerScheduledProject",
                        "ComputerScheduledProject 2",
                        "1234qwer",
                        "1234qwer",
                        ""});
#line 38
 testRunner.And("User create a new Dashworks User", ((string)(null)), table5, "And ");
#line 41
 testRunner.And("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("created User is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.When("User navigate to Dashworks User Site link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.And("User navigate to Projects link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.Then("\"Projects Home\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
 testRunner.When("User select Project", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.Then("User make this Project Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
 testRunner.And("Default Project News Title is displayed correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("User navigate to created Project", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("\"Manage Project Details\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("Project Name is displayed correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ShowOriginalColumn",
                        "IncludeSiteName",
                        "NotApplicableApplications",
                        "InstalledApplications",
                        "EntitledApplications",
                        "TaskEmailCcEmailAddress",
                        "TaskEmailBccEmailAddress",
                        "StartDate",
                        "EndDate"});
            table6.AddRow(new string[] {
                        "true",
                        "true",
                        "true",
                        "true",
                        "true",
                        "TestOne@test.com",
                        "TestTwo@test.com",
                        "8 May 2012",
                        "10 Apr 2018"});
#line 52
 testRunner.When("User updates the Details page", ((string)(null)), table6, "When ");
#line 55
 testRunner.Then("Success message is displayed with \"Project was successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 56
 testRunner.Then("CC email field is displayed with \"TestOne@test.com\" text on Senior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
 testRunner.Then("BCC email field is displayed with \"TestTwo@test.com\" text on Senior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
 testRunner.When("User clears the CC email field on Senior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.When("User clears the BCC email field on Senior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
 testRunner.And("User clicks \"Update\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.Then("CC email field on Senior is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 62
 testRunner.Then("BCC email field on Senior is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 64
 testRunner.When("User navigate to \"Request Types\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
 testRunner.Then("\"Manage Request Types\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 66
 testRunner.When("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "ObjectTypeString"});
            table7.AddRow(new string[] {
                        "1 TestRequestTypeName",
                        "ComputerScheduledProject 1",
                        "User"});
#line 67
 testRunner.And("User create Request Type", ((string)(null)), table7, "And ");
#line 70
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 71
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 73
 testRunner.When("User removes created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.And("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "ObjectTypeString"});
            table8.AddRow(new string[] {
                        "2 TestRequestTypeName",
                        "ComputerScheduledProject 2",
                        "Application"});
#line 75
 testRunner.And("User create Request Type", ((string)(null)), table8, "And ");
#line 78
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 79
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 81
 testRunner.When("User removes created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
 testRunner.And("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "ObjectTypeString"});
            table9.AddRow(new string[] {
                        "3 TestRequestTypeName",
                        "ComputerScheduledProject 3",
                        "Computer"});
#line 83
 testRunner.And("User create Request Type", ((string)(null)), table9, "And ");
#line 86
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 87
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 89
 testRunner.When("User removes created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
 testRunner.And("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "ObjectTypeString"});
            table10.AddRow(new string[] {
                        "1 TestRequestTypeName",
                        "ComputerScheduledProject 1",
                        "User"});
#line 91
 testRunner.And("User create Request Type", ((string)(null)), table10, "And ");
#line 94
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 95
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 97
 testRunner.When("User click on the created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "DefaultRequestType"});
            table11.AddRow(new string[] {
                        "true"});
#line 98
 testRunner.And("User updates the Request Type page", ((string)(null)), table11, "And ");
#line 101
 testRunner.Then("Success message is displayed with \"Request Type successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 102
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 103
 testRunner.Then("created Request Type is a Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 104
 testRunner.When("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "ObjectTypeString"});
            table12.AddRow(new string[] {
                        "2 TestRequestTypeName",
                        "ComputerScheduledProject 2",
                        "Application"});
#line 105
 testRunner.And("User create Request Type", ((string)(null)), table12, "And ");
#line 108
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 109
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 111
 testRunner.When("User click on the created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "DefaultRequestType"});
            table13.AddRow(new string[] {
                        "true"});
#line 112
 testRunner.And("User updates the Request Type page", ((string)(null)), table13, "And ");
#line 115
 testRunner.Then("Success message is displayed with \"Request Type successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
 testRunner.Then("created Request Type is a Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 118
 testRunner.When("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "ObjectTypeString"});
            table14.AddRow(new string[] {
                        "3 TestRequestTypeName",
                        "ComputerScheduledProject 3",
                        "Computer"});
#line 119
 testRunner.And("User create Request Type", ((string)(null)), table14, "And ");
#line 122
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 123
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 125
 testRunner.When("User click on the created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "DefaultRequestType"});
            table15.AddRow(new string[] {
                        "true"});
#line 126
 testRunner.And("User updates the Request Type page", ((string)(null)), table15, "And ");
#line 129
 testRunner.Then("Success message is displayed with \"Request Type successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 130
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
 testRunner.Then("created Request Type is a Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 133
 testRunner.When("User navigate to \"Categories\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 134
 testRunner.Then("\"Manage Categories\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 135
 testRunner.When("User clicks \"Create Category\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "ObjectTypeString"});
            table16.AddRow(new string[] {
                        "for removing",
                        "ComputerScheduledProject",
                        "Computer"});
#line 136
 testRunner.And("User create Category", ((string)(null)), table16, "And ");
#line 139
 testRunner.Then("Success message is displayed with \"Category successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 140
 testRunner.When("User clicks \"« Go Back\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 141
 testRunner.Then("created Category is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 142
 testRunner.When("User removes created Category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 143
 testRunner.Then("selected Category was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 144
 testRunner.When("User clicks \"Create Category\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "ObjectTypeString"});
            table17.AddRow(new string[] {
                        "Computer Category",
                        "ComputerScheduledProject",
                        "Computer"});
#line 145
 testRunner.And("User create Category", ((string)(null)), table17, "And ");
#line 148
 testRunner.Then("Success message is displayed with \"Category successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 149
 testRunner.When("User clicks \"« Go Back\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
 testRunner.Then("created Category is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 151
 testRunner.When("User clicks \"Create Category\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "ObjectTypeString"});
            table18.AddRow(new string[] {
                        "User Category",
                        "ComputerScheduledProject",
                        "User"});
#line 152
 testRunner.And("User create Category", ((string)(null)), table18, "And ");
#line 155
 testRunner.Then("Success message is displayed with \"Category successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 156
 testRunner.When("User clicks \"« Go Back\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 157
 testRunner.Then("created Category is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 158
 testRunner.When("User clicks \"Create Category\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "ObjectTypeString"});
            table19.AddRow(new string[] {
                        "Application Category",
                        "ComputerScheduledProject",
                        "Application"});
#line 159
 testRunner.And("User create Category", ((string)(null)), table19, "And ");
#line 162
 testRunner.Then("Success message is displayed with \"Category successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 163
 testRunner.When("User clicks \"« Go Back\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 164
 testRunner.Then("created Category is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 166
 testRunner.When("User navigate to \"Stages\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 167
 testRunner.Then("\"Manage Stages\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 168
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "StageName"});
            table20.AddRow(new string[] {
                        "for removing"});
#line 169
 testRunner.And("User create Stage", ((string)(null)), table20, "And ");
#line 172
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 173
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 174
 testRunner.And("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
 testRunner.When("User removes created Stage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 176
 testRunner.Then("selected Stage was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 177
 testRunner.And("Success message is displayed with \"Stage successfully deleted.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "StageName"});
            table21.AddRow(new string[] {
                        "Stage 1"});
#line 179
 testRunner.And("User create Stage", ((string)(null)), table21, "And ");
#line 182
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 183
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 184
 testRunner.Then("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 185
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "StageName"});
            table22.AddRow(new string[] {
                        "Stage 2"});
#line 186
 testRunner.And("User create Stage", ((string)(null)), table22, "And ");
#line 189
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 190
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 191
 testRunner.Then("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 192
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "StageName"});
            table23.AddRow(new string[] {
                        "Stage 3"});
#line 193
 testRunner.And("User create Stage", ((string)(null)), table23, "And ");
#line 196
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 198
 testRunner.Then("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 199
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "StageName"});
            table24.AddRow(new string[] {
                        "Stage 4"});
#line 200
 testRunner.And("User create Stage", ((string)(null)), table24, "And ");
#line 203
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 204
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 205
 testRunner.Then("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 207
 testRunner.When("User navigate to \"Mail Templates\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 208
 testRunner.Then("\"Manage Mail Templates\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 209
 testRunner.When("User clicks \"Create Mail Template\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "SubjectLine",
                        "BodyText"});
            table25.AddRow(new string[] {
                        "TestMailTemplateName",
                        "ComputerScheduledProject",
                        "TestText",
                        "TestText"});
#line 210
 testRunner.And("User create Mail Template", ((string)(null)), table25, "And ");
#line 213
 testRunner.Then("Success message is displayed with \"Mail Template successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 215
 testRunner.When("User navigate to \"Tasks\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 216
 testRunner.Then("\"Manage Tasks\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 217
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table26.AddRow(new string[] {
                        "for removing",
                        "for removing",
                        "Stage 1",
                        "Normal",
                        "Date",
                        "User",
                        "",
                        "true"});
#line 218
 testRunner.And("User creates Task", ((string)(null)), table26, "And ");
#line 221
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 222
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 223
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 224
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 225
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 226
 testRunner.When("User removes created Task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 227
 testRunner.Then("selected Task was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 228
 testRunner.And("Success message is displayed with \"Task successfully deleted.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
 testRunner.When("User navigate to \"Tasks\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 231
 testRunner.Then("\"Manage Tasks\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 232
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table27.AddRow(new string[] {
                        "Forecast Date",
                        "Forecast Date",
                        "Stage 1",
                        "Normal",
                        "Date",
                        "Computer",
                        "",
                        "true"});
#line 233
 testRunner.And("User creates Task", ((string)(null)), table27, "And ");
#line 236
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table28.AddRow(new string[] {
                        "true",
                        "DateOnly",
                        "ForecastDate",
                        "true",
                        "false",
                        "false",
                        "false"});
#line 237
 testRunner.When("User updates the Task page", ((string)(null)), table28, "When ");
#line 240
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 241
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 242
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 243
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 244
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 246
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table29.AddRow(new string[] {
                        "Target Date",
                        "Target Date",
                        "Stage 2",
                        "Normal",
                        "Date",
                        "Computer",
                        "",
                        "true"});
#line 247
 testRunner.And("User creates Task", ((string)(null)), table29, "And ");
#line 250
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table30.AddRow(new string[] {
                        "true",
                        "DateOnly",
                        "TargetDate",
                        "false",
                        "false",
                        "false",
                        "false"});
#line 251
 testRunner.When("User updates the Task page", ((string)(null)), table30, "When ");
#line 254
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 255
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 256
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 257
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 258
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 260
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table31.AddRow(new string[] {
                        "Scheduled Date",
                        "Scheduled Date",
                        "Stage 3",
                        "Normal",
                        "Date",
                        "Computer",
                        "",
                        "true"});
#line 261
 testRunner.And("User creates Task", ((string)(null)), table31, "And ");
#line 264
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table32.AddRow(new string[] {
                        "true",
                        "DateTime",
                        "ScheduledDate",
                        "true",
                        "false",
                        "false",
                        "false"});
#line 265
 testRunner.When("User updates the Task page", ((string)(null)), table32, "When ");
#line 268
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 269
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 270
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 271
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 272
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 274
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table33.AddRow(new string[] {
                        "Migrated Date",
                        "Migrated Date",
                        "Stage 4",
                        "Normal",
                        "Date",
                        "Computer",
                        "",
                        "true"});
#line 275
 testRunner.And("User creates Task", ((string)(null)), table33, "And ");
#line 278
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table34.AddRow(new string[] {
                        "true",
                        "DateTime",
                        "MigratedDate",
                        "false",
                        "true",
                        "false",
                        "true"});
#line 279
 testRunner.When("User updates the Task page", ((string)(null)), table34, "When ");
#line 282
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 283
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 284
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 285
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 286
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 288
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table35.AddRow(new string[] {
                        "Completed Date",
                        "Completed Date",
                        "Stage 4",
                        "Normal",
                        "Date",
                        "Computer",
                        "",
                        "true"});
#line 289
 testRunner.And("User creates Task", ((string)(null)), table35, "And ");
#line 292
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table36.AddRow(new string[] {
                        "true",
                        "DateOnly",
                        "CompletedDate",
                        "true",
                        "true",
                        "false",
                        "true"});
#line 293
 testRunner.When("User updates the Task page", ((string)(null)), table36, "When ");
#line 296
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 297
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 298
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 299
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 300
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 302
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table37.AddRow(new string[] {
                        "Group Date Task",
                        "Group Date Task",
                        "Stage 1",
                        "Group",
                        "Date",
                        "Computer",
                        "",
                        "true"});
#line 303
 testRunner.And("User creates Task", ((string)(null)), table37, "And ");
#line 306
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "BulkUpdate",
                        "GroupTaskDashboard"});
            table38.AddRow(new string[] {
                        "true",
                        "DateOnly",
                        "None",
                        "true",
                        "false",
                        "true"});
#line 307
 testRunner.When("User updates the Task page", ((string)(null)), table38, "When ");
#line 310
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 311
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 312
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 313
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 314
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 316
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table39.AddRow(new string[] {
                        "Text Task",
                        "Text Task",
                        "Stage 2",
                        "Normal",
                        "Text",
                        "Computer",
                        "",
                        "true"});
#line 317
 testRunner.And("User creates Task", ((string)(null)), table39, "And ");
#line 320
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "TextModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table40.AddRow(new string[] {
                        "SingleLine",
                        "",
                        "true",
                        "false",
                        "false",
                        "false"});
#line 321
 testRunner.When("User updates the Task page", ((string)(null)), table40, "When ");
#line 324
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 325
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 326
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 327
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 328
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 330
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table41.AddRow(new string[] {
                        "Radiobutton RAG Owner Date",
                        "Radiobutton RAG Owner Date",
                        "Stage 3",
                        "Normal",
                        "Radiobutton",
                        "Computer",
                        "ReadinessNnsfcWithDueDateOwner",
                        "true"});
#line 331
 testRunner.And("User creates Task", ((string)(null)), table41, "And ");
#line 334
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "TaskHasAnOwner",
                        "TaskImpactsReadiness",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table42.AddRow(new string[] {
                        "true",
                        "DateOnly",
                        "None",
                        "true",
                        "true",
                        "true",
                        "false",
                        "false",
                        "false"});
#line 335
 testRunner.When("User updates the Task page", ((string)(null)), table42, "When ");
#line 338
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 339
 testRunner.When("User navigate to \"Values\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 340
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table43.AddRow(new string[] {
                        "Blocked",
                        "Open",
                        "false"});
#line 341
 testRunner.And("User create new Value", ((string)(null)), table43, "And ");
#line 344
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 345
 testRunner.And("User navigates to \"Not Started\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table44.AddRow(new string[] {
                        "",
                        "",
                        "true"});
#line 346
 testRunner.And("User edit selected Value", ((string)(null)), table44, "And ");
#line 349
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 351
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 352
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 353
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 354
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 356
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table45.AddRow(new string[] {
                        "Dropdown Non RAG Owner",
                        "Dropdown Non RAG Owner",
                        "Stage 4",
                        "Normal",
                        "DropDownList",
                        "Computer",
                        "NoReadinessNaEnabledDisabled",
                        "true"});
#line 357
 testRunner.And("User creates Task", ((string)(null)), table45, "And ");
#line 360
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "TaskHasAnOwner",
                        "TaskImpactsReadiness",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table46.AddRow(new string[] {
                        "false",
                        "",
                        "Workflow",
                        "false",
                        "false",
                        "true",
                        "false",
                        "false",
                        "false"});
#line 361
 testRunner.When("User updates the Task page", ((string)(null)), table46, "When ");
#line 364
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 365
 testRunner.When("User navigate to \"Values\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 366
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table47.AddRow(new string[] {
                        "None",
                        "Closed",
                        "false"});
#line 367
 testRunner.And("User create new Value", ((string)(null)), table47, "And ");
#line 370
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 371
 testRunner.And("User navigates to \"Enabled\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table48.AddRow(new string[] {
                        "",
                        "Open",
                        "true"});
#line 372
 testRunner.And("User edit selected Value", ((string)(null)), table48, "And ");
#line 375
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 376
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 377
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 378
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 379
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 380
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 382
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table49.AddRow(new string[] {
                        "Group Radiobutton RAG Date Time Owner",
                        "Group Radiobutton RAG Date Time Owner",
                        "Stage 2",
                        "Group",
                        "Radiobutton",
                        "Computer",
                        "ReadinessNnsfcWithDueDateOwner",
                        "true"});
#line 383
 testRunner.And("User creates Task", ((string)(null)), table49, "And ");
#line 386
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "TaskHasAnOwner",
                        "TaskImpactsReadiness",
                        "ShowDetails",
                        "GroupTaskDashboard",
                        "BulkUpdate"});
            table50.AddRow(new string[] {
                        "false",
                        "DateTime",
                        "None",
                        "true",
                        "true",
                        "true",
                        "false",
                        "true"});
#line 387
 testRunner.When("User updates the Task page", ((string)(null)), table50, "When ");
#line 390
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 391
 testRunner.When("User navigate to \"Values\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 392
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table51.AddRow(new string[] {
                        "Unknown",
                        "Open",
                        "true"});
#line 393
 testRunner.And("User create new Value", ((string)(null)), table51, "And ");
#line 396
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
 testRunner.And("User navigates to \"Not Applicable\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table52.AddRow(new string[] {
                        "N/A",
                        "",
                        "false"});
#line 398
 testRunner.And("User edit selected Value", ((string)(null)), table52, "And ");
#line 401
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 403
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 404
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 405
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 406
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 408
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table53.AddRow(new string[] {
                        "Dropdown RAG Date & Time",
                        "Dropdown RAG Date & Time",
                        "Stage 3",
                        "Normal",
                        "DropDownList",
                        "Computer",
                        "ReadinessNnsfcWithDueDate",
                        "false"});
#line 409
 testRunner.And("User creates Task", ((string)(null)), table53, "And ");
#line 412
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "TaskHasAnOwner",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table54.AddRow(new string[] {
                        "true",
                        "DateTime",
                        "None",
                        "true",
                        "false",
                        "false",
                        "false",
                        "true"});
#line 413
 testRunner.When("User updates the Task page", ((string)(null)), table54, "When ");
#line 416
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 417
 testRunner.When("User navigate to \"Request Types\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 418
 testRunner.Then("\"Edit Task\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 419
 testRunner.When("User select \"3 TestRequestTypeName\" Request Type on Task page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 420
 testRunner.And("User save selected Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 421
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 422
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 423
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 424
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 425
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 427
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table55.AddRow(new string[] {
                        "Text Task (User)",
                        "Text Task (User)",
                        "Stage 1",
                        "Normal",
                        "Text",
                        "User",
                        "",
                        "true"});
#line 428
 testRunner.And("User creates Task", ((string)(null)), table55, "And ");
#line 431
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "TextModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table56.AddRow(new string[] {
                        "MultipleLine",
                        "EmailAddressUser",
                        "true",
                        "false",
                        "false",
                        "false"});
#line 432
 testRunner.When("User updates the Task page", ((string)(null)), table56, "When ");
#line 435
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 436
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 437
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 438
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 439
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 441
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table57.AddRow(new string[] {
                        "Radiobutton RAG Owner Date (User)",
                        "Radiobutton RAG Owner Date (User)",
                        "Stage 2",
                        "Normal",
                        "Radiobutton",
                        "User",
                        "ReadinessNnsfcWithDueDate",
                        "true"});
#line 442
 testRunner.And("User creates Task", ((string)(null)), table57, "And ");
#line 445
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "TaskImpactsReadiness",
                        "TaskHasAnOwner",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table58.AddRow(new string[] {
                        "true",
                        "DateTime",
                        "SelfServiceEnabledUserMode",
                        "true",
                        "true",
                        "true",
                        "false",
                        "false",
                        "false"});
#line 446
 testRunner.When("User updates the Task page", ((string)(null)), table58, "When ");
#line 449
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 450
 testRunner.When("User navigate to \"Value\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 451
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table59.AddRow(new string[] {
                        "Blocked",
                        "Open",
                        "false"});
#line 452
 testRunner.And("User create new Value", ((string)(null)), table59, "And ");
#line 455
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 456
 testRunner.And("User navigates to \"Not Started\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table60.AddRow(new string[] {
                        "To Be Started",
                        "",
                        "true"});
#line 457
 testRunner.And("User edit selected Value", ((string)(null)), table60, "And ");
#line 460
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 461
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 462
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 463
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 464
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 465
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 467
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table61.AddRow(new string[] {
                        "Group Dropdown RAG (User)",
                        "Group Dropdown RAG (User)",
                        "Stage 3",
                        "Group",
                        "DropDownList",
                        "User",
                        "ReadinessNnsfc",
                        "false"});
#line 468
 testRunner.And("User creates Task", ((string)(null)), table61, "And ");
#line 471
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "TaskImpactsReadiness",
                        "ShowDetails",
                        "BulkUpdate",
                        "GroupTaskDashboard"});
            table62.AddRow(new string[] {
                        "false",
                        "",
                        "EmailNotificationsUser",
                        "true",
                        "true",
                        "false",
                        "false"});
#line 472
 testRunner.When("User updates the Task page", ((string)(null)), table62, "When ");
#line 475
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 476
 testRunner.When("User navigate to \"Value\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 477
 testRunner.And("User navigates to \"Complete\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table63.AddRow(new string[] {
                        "Finished",
                        "",
                        "false"});
#line 478
 testRunner.And("User edit selected Value", ((string)(null)), table63, "And ");
#line 481
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 482
 testRunner.And("User navigate to \"Request Types\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 483
 testRunner.Then("\"Edit Task\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 484
 testRunner.When("User select \"[Default (User)]\" Request Type on Task page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 485
 testRunner.And("User save selected Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 486
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 487
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 488
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 489
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 490
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 492
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table64.AddRow(new string[] {
                        "Date Task (User)",
                        "Date Task (User)",
                        "Stage 4",
                        "Normal",
                        "Date",
                        "User",
                        "",
                        "true"});
#line 493
 testRunner.And("User creates Task", ((string)(null)), table64, "And ");
#line 496
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table65.AddRow(new string[] {
                        "true",
                        "",
                        "SelfServiceProjectDateCompletedDateUserMode",
                        "false",
                        "true",
                        "true",
                        "false"});
#line 497
 testRunner.When("User updates the Task page", ((string)(null)), table65, "When ");
#line 500
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 501
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 502
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 503
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 504
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 506
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table66.AddRow(new string[] {
                        "Radiobutton Non RAG Owner Date (Application)",
                        "Radiobutton Non RAG Owner Date (Application)",
                        "Stage 1",
                        "Normal",
                        "Radiobutton",
                        "Application",
                        "NoReadinessNnsfcWithDueDateOwner",
                        "true"});
#line 507
 testRunner.And("User creates Task", ((string)(null)), table66, "And ");
#line 510
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table67.AddRow(new string[] {
                        "true",
                        "DateTime",
                        "Workflow",
                        "true",
                        "false",
                        "false",
                        "false"});
#line 511
 testRunner.When("User updates the Task page", ((string)(null)), table67, "When ");
#line 514
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 515
 testRunner.When("User navigate to \"Value\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 516
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table68.AddRow(new string[] {
                        "Unknown",
                        "Open",
                        "true"});
#line 517
 testRunner.And("User create new Value", ((string)(null)), table68, "And ");
#line 520
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 521
 testRunner.And("User navigates to \"Started\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table69.AddRow(new string[] {
                        "In Progress",
                        "",
                        "false"});
#line 522
 testRunner.And("User edit selected Value", ((string)(null)), table69, "And ");
#line 525
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 526
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 527
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 528
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 529
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 530
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 532
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table70.AddRow(new string[] {
                        "Dropdown RAG Owner (Application)",
                        "Dropdown RAG Owner (Application)",
                        "Stage 2",
                        "Normal",
                        "DropDownList",
                        "Application",
                        "ReadinessNnsfc",
                        "false"});
#line 533
 testRunner.And("User creates Task", ((string)(null)), table70, "And ");
#line 536
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "TaskImpactsReadiness",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table71.AddRow(new string[] {
                        "false",
                        "",
                        "None",
                        "true",
                        "true",
                        "false",
                        "false",
                        "true"});
#line 537
 testRunner.When("User updates the Task page", ((string)(null)), table71, "When ");
#line 540
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 541
 testRunner.When("User navigate to \"Value\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 542
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table72.AddRow(new string[] {
                        "Under Investigation",
                        "Open",
                        "false"});
#line 543
 testRunner.And("User create new Value", ((string)(null)), table72, "And ");
#line 546
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 547
 testRunner.And("User navigates to \"Not Applicable (Default)\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "TaskStatusString",
                        "DefaultValue"});
            table73.AddRow(new string[] {
                        "N/A",
                        "",
                        "true"});
#line 548
 testRunner.And("User edit selected Value", ((string)(null)), table73, "And ");
#line 551
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 552
 testRunner.And("User navigate to \"Request Types\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 553
 testRunner.Then("\"Edit Task\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 554
 testRunner.When("User select \"2 TestRequestTypeName\" Request Type on Task page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 555
 testRunner.And("User save selected Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 556
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 557
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 558
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 559
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 560
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 562
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table74.AddRow(new string[] {
                        "Application Delivery Date",
                        "Application Delivery Date",
                        "Stage 3",
                        "Normal",
                        "Date",
                        "Application",
                        "",
                        "true"});
#line 563
 testRunner.And("User creates Task", ((string)(null)), table74, "And ");
#line 566
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "TaskHaADueDate",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table75.AddRow(new string[] {
                        "true",
                        "DateOnly",
                        "ApplicationDeliveryDate",
                        "true",
                        "false",
                        "false",
                        "false"});
#line 567
 testRunner.When("User updates the Task page", ((string)(null)), table75, "When ");
#line 570
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 571
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 572
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 573
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 574
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 576
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Help",
                        "StagesNameString",
                        "TaskTypeString",
                        "ValueTypeString",
                        "ObjectTypeString",
                        "TaskValuesTemplateString",
                        "ApplyToAllCheckbox"});
            table76.AddRow(new string[] {
                        "Text Task (Application)",
                        "Text Task (Application)",
                        "Stage 4",
                        "Normal",
                        "Text",
                        "Application",
                        "",
                        "true"});
#line 577
 testRunner.And("User creates Task", ((string)(null)), table76, "And ");
#line 580
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "TextModeString",
                        "DateModeString",
                        "TaskProjectRoleString",
                        "ShowDetails",
                        "ProjectObject",
                        "BulkUpdate",
                        "SelfService"});
            table77.AddRow(new string[] {
                        "SingleLine",
                        "",
                        "DeploymentTarget",
                        "true",
                        "false",
                        "false",
                        "true"});
#line 581
 testRunner.When("User updates the Task page", ((string)(null)), table77, "When ");
#line 584
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 585
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 586
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 587
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 588
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 590
 testRunner.When("User navigate to \"Teams\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 591
 testRunner.Then("\"Manage Teams\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 592
 testRunner.When("User clicks \"Create Team\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "TeamName",
                        "ShortDescription"});
            table78.AddRow(new string[] {
                        "000 for removing",
                        "for removing"});
#line 593
 testRunner.And("User create Team", ((string)(null)), table78, "And ");
#line 596
 testRunner.And("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 597
 testRunner.Then("created Team is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 598
 testRunner.When("User removes created Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 599
 testRunner.Then("selected Team was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 600
 testRunner.When("User clicks \"Create Team\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "TeamName",
                        "ShortDescription"});
            table79.AddRow(new string[] {
                        "000 ComputerScheduledProject",
                        "TestText 0"});
#line 601
 testRunner.And("User create Team", ((string)(null)), table79, "And ");
#line 604
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 605
 testRunner.And("User select user with \"Admin\" name to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 606
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 607
 testRunner.And("User select \"1\" user to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 608
 testRunner.And("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 609
 testRunner.Then("created Team is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 610
 testRunner.And("\"2\" number of Members is displayed for created Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 611
 testRunner.When("User clicks \"Create Team\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "TeamName",
                        "ShortDescription"});
            table80.AddRow(new string[] {
                        "001 ComputerScheduledProject",
                        "TestText 1"});
#line 612
 testRunner.And("User create Team", ((string)(null)), table80, "And ");
#line 615
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 616
 testRunner.And("User select user with \"Admin\" name to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 617
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 618
 testRunner.And("User select \"2\" user to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 619
 testRunner.And("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 620
 testRunner.Then("created Team is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 621
 testRunner.And("\"2\" number of Members is displayed for created Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 622
 testRunner.When("User clicks \"Create Team\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "TeamName",
                        "ShortDescription"});
            table81.AddRow(new string[] {
                        "002 ComputerScheduledProject",
                        "TestText 2"});
#line 623
 testRunner.And("User create Team", ((string)(null)), table81, "And ");
#line 626
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 627
 testRunner.And("User select user with \"Admin\" name to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 628
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 629
 testRunner.And("User select \"3\" user to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 630
 testRunner.And("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 631
 testRunner.Then("created Team is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 632
 testRunner.And("\"2\" number of Members is displayed for created Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 634
 testRunner.When("User navigate to \"Groups\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 635
 testRunner.Then("\"Manage Groups\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 636
 testRunner.When("User clicks \"Create Group\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "GroupName"});
            table82.AddRow(new string[] {
                        "for removing"});
#line 637
 testRunner.And("User create Group owned for \"1\" Team", ((string)(null)), table82, "And ");
#line 640
 testRunner.Then("created Group is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 641
 testRunner.When("User removes created Group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 642
 testRunner.Then("selected Group was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 643
 testRunner.When("User clicks \"Create Group\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "GroupName"});
            table83.AddRow(new string[] {
                        "0 ComputerScheduledProject"});
#line 644
 testRunner.And("User create Group owned for \"1\" Team", ((string)(null)), table83, "And ");
#line 647
 testRunner.Then("created Group is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 648
 testRunner.When("User clicks \"Create Group\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "GroupName"});
            table84.AddRow(new string[] {
                        "1 ComputerScheduledProject"});
#line 649
 testRunner.And("User create Group owned for \"2\" Team", ((string)(null)), table84, "And ");
#line 652
 testRunner.Then("created Group is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 653
 testRunner.When("User clicks \"Create Group\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "GroupName"});
            table85.AddRow(new string[] {
                        "2 ComputerScheduledProject"});
#line 654
 testRunner.And("User create Group owned for \"3\" Team", ((string)(null)), table85, "And ");
#line 657
 testRunner.Then("created Group is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 658
 testRunner.When("User navigate to \"Teams\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 659
 testRunner.Then("\"Manage Teams\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 660
 testRunner.And("\"1\" number of Groups is displayed for \"3\" Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 662
 testRunner.When("User navigate to \"News\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 663
 testRunner.Then("\"Manage News\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Text"});
            table86.AddRow(new string[] {
                        "ComputerScheduledProject",
                        "TestText"});
#line 664
 testRunner.When("User updating News page", ((string)(null)), table86, "When ");
#line 667
 testRunner.Then("Success message is displayed with \"Project news was successfully updated.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 669
 testRunner.When("User navigate to \"Self Service\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 670
 testRunner.Then("\"Manage Self Service\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnableSelfServicePortal",
                        "AllowAnonymousUsers",
                        "ThisProjectDefault",
                        "Mode1",
                        "Mode2",
                        "BaseUrl",
                        "NoLink",
                        "DashworksProjectHomepage",
                        "CustomUrl",
                        "CustomUrlTextField"});
            table87.AddRow(new string[] {
                        "true",
                        "true",
                        "true",
                        "false",
                        "true",
                        "http://automation.corp.juriba.com",
                        "false",
                        "false",
                        "true",
                        "http://www.juriba.com"});
#line 671
 testRunner.When("User updates the Details page on Self Service tab", ((string)(null)), table87, "When ");
#line 674
 testRunner.When("User navigate to \"Welcome\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 675
 testRunner.When("User adds to object details \"Attribute\" type with \"Manufacturer\" field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 676
 testRunner.When("User adds to object details \"Attribute\" type with \"Department\" field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 677
 testRunner.When("User adds to object details \"Attribute\" type with \"Model\" field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 678
 testRunner.When("User clicks \"Update\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 679
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "AllowUsersToSearch",
                        "AllowToChangeLanguage",
                        "ShowProjectSelector",
                        "ShowObjectDetails",
                        "ShowMoreDetailsLink",
                        "PageDescription",
                        "ProjectName"});
            table88.AddRow(new string[] {
                        "true",
                        "true",
                        "true",
                        "true",
                        "true",
                        "TestText",
                        "ComputerScheduledProject"});
#line 680
 testRunner.When("User updates the Welcome page on Self Service tab", ((string)(null)), table88, "When ");
#line 683
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 684
 testRunner.When("User navigate to \"Computer Ownership\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "ShowScreen",
                        "NamefromHttpString",
                        "ShowCategory",
                        "UsersOfTheComputer",
                        "OwnerOfTheComputer",
                        "AllowUsersToChangeUsers",
                        "AllowUsersToAddANote",
                        "LimitMaximum",
                        "LimitMinimum",
                        "PageDescription"});
            table89.AddRow(new string[] {
                        "true",
                        "RemoteHost",
                        "true",
                        "true",
                        "true",
                        "true",
                        "true",
                        "100",
                        "10",
                        "ComputerScheduledProject"});
#line 685
 testRunner.And("User updates the Ownership page on Self Service tab", ((string)(null)), table89, "And ");
#line 688
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 689
 testRunner.When("User navigate to \"Department and Location\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "ShowScreen",
                        "ShowDepartmentFullPath",
                        "ShowLocationFullPath",
                        "AllowUsersToAddANote",
                        "Department",
                        "Location"});
            table90.AddRow(new string[] {
                        "true",
                        "false",
                        "false",
                        "true",
                        "false",
                        "false"});
#line 690
 testRunner.And("User updates the Department and Location page on Self Service tab", ((string)(null)), table90, "And ");
#line 693
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 694
 testRunner.When("User navigate to \"Apps List\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "ShowThisScreen",
                        "ShowCoreApps",
                        "ShowTargetStateReadiness",
                        "ShowRequiredColumnAndSticky",
                        "AllowUsersToAddANote",
                        "ViewString",
                        "PageDescription"});
            table91.AddRow(new string[] {
                        "true",
                        "true",
                        "true",
                        "true",
                        "true",
                        "Comparison",
                        "ComputerScheduledProject"});
#line 695
 testRunner.And("User updates the Apps List page on Self Service tab", ((string)(null)), table91, "And ");
#line 698
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 699
 testRunner.When("User navigate to \"Project Date\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 700
 testRunner.When("User selects \"Scheduled Date\" Task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 701
 testRunner.When("User adds \"Group Date Task\" Additional Task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 702
 testRunner.When("User clicks \"Update\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "ShowThisScreen",
                        "ShowComputerNameString",
                        "AllowUsersToAddANote",
                        "MinimumHours",
                        "MaximumHours",
                        "PageDescription"});
            table92.AddRow(new string[] {
                        "true",
                        "XForwardedFor",
                        "true",
                        "10",
                        "100",
                        "ComputerScheduledProject"});
#line 703
 testRunner.And("User updates the Project Date page on Self Service tab", ((string)(null)), table92, "And ");
#line 706
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 707
 testRunner.When("User navigate to \"Other Options 1\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 708
 testRunner.When("User adds \"Dropdown Non RAG Owner\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 709
 testRunner.When("User adds \"Radiobutton RAG Owner Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 710
 testRunner.When("User adds \"Group Radiobutton RAG Date Time Owner\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 711
 testRunner.When("User adds \"Text Task\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 712
 testRunner.When("User clicks \"Update\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "ShowScreen",
                        "AllowUsersToAddANote",
                        "PageDescription"});
            table93.AddRow(new string[] {
                        "true",
                        "true",
                        "ComputerScheduledProject"});
#line 713
 testRunner.And("User updates the first Other Options page on Self Service tab", ((string)(null)), table93, "And ");
#line 716
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 717
 testRunner.When("User navigate to \"Other Options 2\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 718
 testRunner.When("User adds \"Target Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 719
 testRunner.When("User adds \"Forecast Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 720
 testRunner.When("User adds \"Scheduled Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 721
 testRunner.When("User adds \"Migrated Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 722
 testRunner.When("User adds \"Completed Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 723
 testRunner.When("User clicks \"Update\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "ShowScreen",
                        "AllowUsersToAddANote",
                        "PageDescription"});
            table94.AddRow(new string[] {
                        "true",
                        "true",
                        "ComputerScheduledProject"});
#line 724
 testRunner.And("User updates the second Other Options page on Self Service tab", ((string)(null)), table94, "And ");
#line 727
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 728
 testRunner.When("User navigate to \"Thank You\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "SelfServicePortal",
                        "NavigationMenu",
                        "ChoicesSummary",
                        "IncludeLink",
                        "PageDescription"});
            table95.AddRow(new string[] {
                        "true",
                        "true",
                        "true",
                        "true",
                        "ComputerScheduledProject"});
#line 729
 testRunner.And("User updates the Thank You page on Self Service tab", ((string)(null)), table95, "And ");
#line 732
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

    }
}
#pragma warning restore
#endregion


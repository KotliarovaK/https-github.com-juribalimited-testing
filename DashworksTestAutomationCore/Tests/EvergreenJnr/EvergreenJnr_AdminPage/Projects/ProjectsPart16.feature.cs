// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DashworksTestAutomationCore.Tests.EvergreenJnr.EvergreenJnr_AdminPage.Projects
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ProjectsPart16")]
    public partial class ProjectsPart16Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "ProjectsPart16.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ProjectsPart16", "\tRuns Projects related tests on Admin page", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
#line 5
 testRunner.Given("User is logged in to the Evergreen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.Then("Evergreen Dashboards page should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("EvergreenJnr_AdminPage_ChecksThatOnboardedObjectsWorkCorrectlyForTwoUsers")]
        [NUnit.Framework.CategoryAttribute("Evergreen")]
        [NUnit.Framework.CategoryAttribute("Admin")]
        [NUnit.Framework.CategoryAttribute("EvergreenJnr_AdminPage")]
        [NUnit.Framework.CategoryAttribute("AdminPage")]
        [NUnit.Framework.CategoryAttribute("Projects")]
        [NUnit.Framework.CategoryAttribute("DAS13390")]
        [NUnit.Framework.CategoryAttribute("DAS12582")]
        [NUnit.Framework.CategoryAttribute("DAS11978")]
        [NUnit.Framework.CategoryAttribute("DAS12825")]
        [NUnit.Framework.CategoryAttribute("Cleanup")]
        public virtual void EvergreenJnr_AdminPage_ChecksThatOnboardedObjectsWorkCorrectlyForTwoUsers()
        {
            string[] tagsOfScenario = new string[] {
                    "Evergreen",
                    "Admin",
                    "EvergreenJnr_AdminPage",
                    "AdminPage",
                    "Projects",
                    "DAS13390",
                    "DAS12582",
                    "DAS11978",
                    "DAS12825",
                    "Cleanup"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AdminPage_ChecksThatOnboardedObjectsWorkCorrectlyForTwoUsers", null, new string[] {
                        "Evergreen",
                        "Admin",
                        "EvergreenJnr_AdminPage",
                        "AdminPage",
                        "Projects",
                        "DAS13390",
                        "DAS12582",
                        "DAS11978",
                        "DAS12825",
                        "Cleanup"});
#line 9
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table956 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProjectName",
                            "Scope",
                            "ProjectTemplate",
                            "Mode"});
                table956.AddRow(new string[] {
                            "Project13390",
                            "All Devices",
                            "None",
                            "Standalone Project"});
#line 10
 testRunner.When("Project created via API and opened", ((string)(null)), table956, "When ");
#line hidden
#line 13
 testRunner.And("User navigates to the \'Scope\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And("User navigates to the \'Scope Changes\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And("User navigates to the \'Devices\' tab on Project Scope Changes page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.Then("open tab in the Project Scope Changes section is active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table957 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table957.AddRow(new string[] {
                            "001BAQXT6JWFPI"});
                table957.AddRow(new string[] {
                            "001PSUMZYOW581"});
                table957.AddRow(new string[] {
                            "00BDM1JUR8IF419"});
                table957.AddRow(new string[] {
                            "00CWZRC4UK6W20"});
                table957.AddRow(new string[] {
                            "00HA7MKAVVFDAV"});
                table957.AddRow(new string[] {
                            "00I0COBFWHOF27"});
                table957.AddRow(new string[] {
                            "00K4CEEQ737BA4L"});
                table957.AddRow(new string[] {
                            "00KLL9S8NRF0X6"});
                table957.AddRow(new string[] {
                            "00KWQ4J3WKQM0G"});
                table957.AddRow(new string[] {
                            "00OMQQXWA1DRI6"});
                table957.AddRow(new string[] {
                            "00RUUMAH9OZN9A"});
                table957.AddRow(new string[] {
                            "00SH8162NAS524"});
                table957.AddRow(new string[] {
                            "00YTY8U3ZYP2WT"});
                table957.AddRow(new string[] {
                            "00YWR8TJU4ZF8V"});
                table957.AddRow(new string[] {
                            "011PLA470S0B9DJ"});
                table957.AddRow(new string[] {
                            "018UQ6KL9TF4YF"});
                table957.AddRow(new string[] {
                            "019BFPQGKK5QT8N"});
                table957.AddRow(new string[] {
                            "01COJATLYVAR7A6"});
                table957.AddRow(new string[] {
                            "01DRMO46G58SXK"});
                table957.AddRow(new string[] {
                            "01KFZ6XUVQSII0"});
                table957.AddRow(new string[] {
                            "0281Z793OLLLDU6"});
                table957.AddRow(new string[] {
                            "02C80G8RFTPA9E"});
                table957.AddRow(new string[] {
                            "02X387UDGZJPQY"});
                table957.AddRow(new string[] {
                            "03063X2ZUCDN0A1"});
                table957.AddRow(new string[] {
                            "03U75EKEMUQMUS"});
#line 17
 testRunner.When("User expands multiselect and selects following Objects", ((string)(null)), table957, "When ");
#line hidden
#line 44
 testRunner.And("User clicks \'UPDATE ALL CHANGES\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.Then("\'UPDATE ALL CHANGES\' button is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 46
 testRunner.When("User clicks \'CANCEL\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 47
 testRunner.Then("\'UPDATE ALL CHANGES\' button is not disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
 testRunner.When("User navigates to the \'Users\' tab on Project Scope Changes page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 49
 testRunner.And("User expands multiselect to add objects", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table958 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table958.AddRow(new string[] {
                            "AAC860150 (Kerrie D. Ruiz)"});
                table958.AddRow(new string[] {
                            "AAD1011948 (Pinabel Cinq-Mars)"});
                table958.AddRow(new string[] {
                            "AAG081456 (Melanie Z. Fowler)"});
                table958.AddRow(new string[] {
                            "AAH0343264 (Luc Gauthier)"});
                table958.AddRow(new string[] {
                            "AAK881049 (Miguel W. Owen)"});
                table958.AddRow(new string[] {
                            "AAL852547 (Robbie A. Roach)"});
                table958.AddRow(new string[] {
                            "AAM044531 (Dustin R. Alvarez)"});
                table958.AddRow(new string[] {
                            "AAO271828 (Ramona D. Curtis)"});
                table958.AddRow(new string[] {
                            "AAO3000042 (Georgette Pichette)"});
                table958.AddRow(new string[] {
                            "AAO438834 (James Y. Mc Bride)"});
                table958.AddRow(new string[] {
                            "AAO798996 (Darren J. Walter)"});
                table958.AddRow(new string[] {
                            "AAQ9911340 (Javier Lanctot)"});
                table958.AddRow(new string[] {
                            "AAT858228 (Cheri B. Evans)"});
                table958.AddRow(new string[] {
                            "AAT891621 (Henry F. Mccall)"});
                table958.AddRow(new string[] {
                            "AAV4528222 (Felicienne Vadnais)"});
                table958.AddRow(new string[] {
                            "AAV500479 (Wendi H. Dougherty)"});
                table958.AddRow(new string[] {
                            "AAY704360 (Micah H. Mccall)"});
                table958.AddRow(new string[] {
                            "ABE8110806 (Brice Grimard)"});
                table958.AddRow(new string[] {
                            "ABG5308934 (Carolos Vallée)"});
                table958.AddRow(new string[] {
                            "ABK350523 (Alyssa A. Williams)"});
                table958.AddRow(new string[] {
                            "ABM798049 (Roland C. Bond)"});
                table958.AddRow(new string[] {
                            "ABN563832 (Dewayne D. Butler)"});
                table958.AddRow(new string[] {
                            "ABP977697 (Rocky Y. Stout)"});
                table958.AddRow(new string[] {
                            "ABQ575757 (Salvador K. Waller)"});
                table958.AddRow(new string[] {
                            "ABS188911 (Jesus W. Kirk)"});
#line 50
 testRunner.And("User selects following Objects from the expandable multiselect", ((string)(null)), table958, "And ");
#line hidden
#line 77
 testRunner.And("User navigates to the \'Applications\' tab on Project Scope Changes page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
 testRunner.And("User expands multiselect to add objects", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table959 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table959.AddRow(new string[] {
                            "\"WPF/E\" (codename) Community Technology Preview (Feb 2007) (0.8.5.0)"});
                table959.AddRow(new string[] {
                            "0004 - Adobe Acrobat Reader 5.0.5 Francais (5.0.5)"});
                table959.AddRow(new string[] {
                            "0036 - Microsoft Access 97 SR-2 English (8.0)"});
                table959.AddRow(new string[] {
                            "0047 - Microsoft Access 97 SR-2 Francais (8.0)"});
                table959.AddRow(new string[] {
                            "20040610sqlserverck (1.0.0)"});
                table959.AddRow(new string[] {
                            "32VerSee v.231 en (C:\\32VerSee\\)"});
                table959.AddRow(new string[] {
                            "Access 97 Rumtime"});
                table959.AddRow(new string[] {
                            "ACDSee 4.0 SendPix & Email Update (1.00.0000)"});
                table959.AddRow(new string[] {
                            "ACDSee Mobile 1.2 for Palm OS? (1.2)"});
                table959.AddRow(new string[] {
                            "ActiveBar Version 2.0 Upgrade"});
                table959.AddRow(new string[] {
                            "AddFlow 4"});
                table959.AddRow(new string[] {
                            "Adobe Acrobat Reader 3.0 ((Not Available))"});
                table959.AddRow(new string[] {
                            "Adobe SVG Viewer 3.0 (3.0)"});
                table959.AddRow(new string[] {
                            "aktion (0.3.6)"});
                table959.AddRow(new string[] {
                            "AltaVista Power Tools for IE5"});
                table959.AddRow(new string[] {
                            "Amazon Redshift ODBC Driver 64-bit (1.2.1)"});
                table959.AddRow(new string[] {
                            "AnalogX TrackSeek"});
                table959.AddRow(new string[] {
                            "AppForge 2.0 Professional (02.00.0110)"});
                table959.AddRow(new string[] {
                            "Ask Toolbar 4.0 (OEM1000) (4.0.1.1)"});
                table959.AddRow(new string[] {
                            "AtomixMP3"});
                table959.AddRow(new string[] {
                            "aumix (2.7)"});
                table959.AddRow(new string[] {
                            "Avery Zweckform Assistent"});
                table959.AddRow(new string[] {
                            "Axosoft OnTime 2005 Enterprise Server (5.3.0)"});
                table959.AddRow(new string[] {
                            "BDE 5.01 Upgrade"});
                table959.AddRow(new string[] {
                            "Brava! Reader 2.5 (2.5)"});
#line 79
 testRunner.And("User selects following Objects from the expandable multiselect", ((string)(null)), table959, "And ");
#line hidden
#line 106
 testRunner.And("User clicks \'UPDATE ALL CHANGES\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 107
 testRunner.Then("\'25 devices will be added, 25 users will be added, 25 applications will be added\'" +
                        " text is displayed on inline tip banner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 108
 testRunner.When("User clicks \'UPDATE PROJECT\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 109
 testRunner.Then("\'75 objects queued for onboarding, 0 objects offboarded\' text is displayed on inl" +
                        "ine success banner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 110
 testRunner.When("User navigates to the \'Queue\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 111
 testRunner.When("User waits until Queue disappears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 112
 testRunner.When("User navigates to the \'Scope Changes\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 113
 testRunner.Then("\"Devices to add (0 of 17254 selected)\" is displayed to the user in the Project Sc" +
                        "ope Changes section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table960 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table960.AddRow(new string[] {
                            "019BFPQGKK5QT8N"});
#line 114
 testRunner.And("following objects were not found", ((string)(null)), table960, "And ");
#line hidden
#line 117
 testRunner.When("User navigates to the \'Users\' tab on Project Scope Changes page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 118
 testRunner.Then("\"Users to add (0 of 14604 selected)\" is displayed to the user in the Project Scop" +
                        "e Changes section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table961 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table961.AddRow(new string[] {
                            "AAC860150 (Kerrie D. Ruiz)"});
#line 119
 testRunner.And("following objects were not found", ((string)(null)), table961, "And ");
#line hidden
#line 122
 testRunner.When("User navigates to the \'Applications\' tab on Project Scope Changes page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 123
 testRunner.Then("\"Applications to add (0 of 2104 selected)\" is displayed to the user in the Projec" +
                        "t Scope Changes section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table962 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table962.AddRow(new string[] {
                            "\"WPF/E\" (codename) Community Technology Preview (Feb 2007) (0.8.5.0)"});
#line 124
 testRunner.And("following objects were not found", ((string)(null)), table962, "And ");
#line hidden
#line 128
 testRunner.When("User clicks \'Projects\' on the left-hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 129
 testRunner.Then("\"Projects Home\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 130
 testRunner.When("User navigate to Manage link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 131
 testRunner.And("User select \"Manage Users\" option in Management Console", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table963 = new TechTalk.SpecFlow.Table(new string[] {
                            "Username",
                            "FullName",
                            "Password",
                            "ConfirmPassword",
                            "Roles"});
                table963.AddRow(new string[] {
                            "DAS13390",
                            "13390",
                            "1234qwer",
                            "1234qwer",
                            "Project Administrator"});
#line 132
 testRunner.And("User create new User", ((string)(null)), table963, "And ");
#line hidden
#line 135
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 136
 testRunner.When("User cliks Logout link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 137
 testRunner.Then("User is logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 139
 testRunner.When("User clicks on the Login link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 140
 testRunner.Then("Login Page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table964 = new TechTalk.SpecFlow.Table(new string[] {
                            "Username",
                            "Password"});
                table964.AddRow(new string[] {
                            "DAS13390",
                            "1234qwer"});
#line 141
 testRunner.When("User login with following credentials:", ((string)(null)), table964, "When ");
#line hidden
#line 144
 testRunner.Then("Dashworks homepage is displayed to the user in a logged in state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 145
 testRunner.When("User clicks the Switch to Evergreen link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 146
 testRunner.Then("Evergreen Dashboards page should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 147
 testRunner.When("User clicks \'Admin\' on the left-hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 148
 testRunner.Then("\'Admin\' list should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 149
 testRunner.When("User navigates to the \'Projects\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 150
 testRunner.Then("Page with \'Projects\' header is displayed to user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 151
 testRunner.When("User enters \"Project13390\" text in the Search field for \"Project\" column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 152
 testRunner.And("User clicks content from \"Project\" column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 153
 testRunner.And("User navigates to the \'Scope Changes\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 155
 testRunner.Then("inline tip banner is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 156
 testRunner.And("\"Devices to add (0 of 17254 selected)\" is displayed to the user in the Project Sc" +
                        "ope Changes section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table965 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table965.AddRow(new string[] {
                            "019BFPQGKK5QT8N"});
#line 157
 testRunner.And("following objects were not found", ((string)(null)), table965, "And ");
#line hidden
#line 160
 testRunner.When("User navigates to the \'Users\' tab on Project Scope Changes page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 161
 testRunner.Then("\"Users to add (0 of 14604 selected)\" is displayed to the user in the Project Scop" +
                        "e Changes section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table966 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table966.AddRow(new string[] {
                            "AAC860150 (Kerrie D. Ruiz)"});
#line 162
 testRunner.And("following objects were not found", ((string)(null)), table966, "And ");
#line hidden
#line 165
 testRunner.When("User navigates to the \'Applications\' tab on Project Scope Changes page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 166
 testRunner.Then("\"Applications to add (0 of 2104 selected)\" is displayed to the user in the Projec" +
                        "t Scope Changes section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table967 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table967.AddRow(new string[] {
                            "\"WPF/E\" (codename) Community Technology Preview (Feb 2007) (0.8.5.0)"});
#line 167
 testRunner.And("following objects were not found", ((string)(null)), table967, "And ");
#line hidden
#line 170
 testRunner.When("User clicks \'Admin\' on the left-hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 171
 testRunner.Then("\'Admin\' list should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table968 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProjectName",
                            "Scope",
                            "ProjectTemplate",
                            "Mode"});
                table968.AddRow(new string[] {
                            "Project13391",
                            "All Devices",
                            "None",
                            "Standalone Project"});
#line 172
 testRunner.When("Project created via API and opened", ((string)(null)), table968, "When ");
#line hidden
#line 175
 testRunner.And("User navigates to the \'Scope\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 176
 testRunner.And("User navigates to the \'Scope Changes\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 177
 testRunner.And("User navigates to the \'Devices\' tab on Project Scope Changes page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 178
 testRunner.Then("open tab in the Project Scope Changes section is active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 179
 testRunner.When("User expands multiselect to add objects", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table969 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table969.AddRow(new string[] {
                            "001BAQXT6JWFPI"});
                table969.AddRow(new string[] {
                            "001PSUMZYOW581"});
                table969.AddRow(new string[] {
                            "00BDM1JUR8IF419"});
#line 180
 testRunner.And("User selects following Objects from the expandable multiselect", ((string)(null)), table969, "And ");
#line hidden
#line 185
 testRunner.When("User navigates to the \'Users\' tab on Project Scope Changes page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 186
 testRunner.And("User expands multiselect to add objects", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table970 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table970.AddRow(new string[] {
                            "AAC860150 (Kerrie D. Ruiz)"});
                table970.AddRow(new string[] {
                            "AAD1011948 (Pinabel Cinq-Mars)"});
                table970.AddRow(new string[] {
                            "AAG081456 (Melanie Z. Fowler)"});
#line 187
 testRunner.And("User selects following Objects from the expandable multiselect", ((string)(null)), table970, "And ");
#line hidden
#line 192
 testRunner.And("User navigates to the \'Applications\' tab on Project Scope Changes page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 193
 testRunner.And("User expands multiselect to add objects", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table971 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table971.AddRow(new string[] {
                            "\"WPF/E\" (codename) Community Technology Preview (Feb 2007) (0.8.5.0)"});
                table971.AddRow(new string[] {
                            "0004 - Adobe Acrobat Reader 5.0.5 Francais (5.0.5)"});
                table971.AddRow(new string[] {
                            "0036 - Microsoft Access 97 SR-2 English (8.0)"});
#line 194
 testRunner.And("User selects following Objects from the expandable multiselect", ((string)(null)), table971, "And ");
#line hidden
#line 199
 testRunner.When("User clicks the Logout button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 200
 testRunner.Then("User is logged out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 201
 testRunner.When("User clicks on the Login link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 202
 testRunner.Then("Login Page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 203
 testRunner.When("User provides the Login and Password and clicks on the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 204
 testRunner.Then("Dashworks homepage is displayed to the user in a logged in state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 205
 testRunner.When("User navigate to Manage link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 206
 testRunner.And("User select \"Manage Users\" option in Management Console", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 207
 testRunner.And("User removes \"DAS13390\" User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("EvergreenJnr_AdminPage_CheckingSortingOrderOfTheObjectsInTheProjectScopeChanges")]
        [NUnit.Framework.CategoryAttribute("Evergreen")]
        [NUnit.Framework.CategoryAttribute("Admin")]
        [NUnit.Framework.CategoryAttribute("EvergreenJnr_AdminPage")]
        [NUnit.Framework.CategoryAttribute("AdminPage")]
        [NUnit.Framework.CategoryAttribute("Projects")]
        [NUnit.Framework.CategoryAttribute("DAS12645")]
        [NUnit.Framework.CategoryAttribute("Cleanup")]
        public virtual void EvergreenJnr_AdminPage_CheckingSortingOrderOfTheObjectsInTheProjectScopeChanges()
        {
            string[] tagsOfScenario = new string[] {
                    "Evergreen",
                    "Admin",
                    "EvergreenJnr_AdminPage",
                    "AdminPage",
                    "Projects",
                    "DAS12645",
                    "Cleanup"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AdminPage_CheckingSortingOrderOfTheObjectsInTheProjectScopeChanges", null, new string[] {
                        "Evergreen",
                        "Admin",
                        "EvergreenJnr_AdminPage",
                        "AdminPage",
                        "Projects",
                        "DAS12645",
                        "Cleanup"});
#line 210
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table972 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProjectName",
                            "Scope",
                            "ProjectTemplate",
                            "Mode"});
                table972.AddRow(new string[] {
                            "TestProject12645",
                            "All Mailboxes",
                            "None",
                            "Standalone Project"});
#line 211
 testRunner.When("Project created via API and opened", ((string)(null)), table972, "When ");
#line hidden
#line 214
 testRunner.Then("Page with \'TestProject12645\' header is displayed to user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 215
 testRunner.When("User navigates to the \'Scope\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 216
 testRunner.When("User navigates to the \'Scope Changes\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 217
 testRunner.When("User expands multiselect to add objects", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 218
 testRunner.Then("Objects are displayed in alphabetical order on the Admin page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table973 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table973.AddRow(new string[] {
                            "000F977AC8824FE39B8@bclabs.local (Spruill, Shea)"});
                table973.AddRow(new string[] {
                            "002B5DC7D4D34D5C895@bclabs.local (Collor, Christopher)"});
                table973.AddRow(new string[] {
                            "003F5D8E1A844B1FAA5@bclabs.local (Hunter, Melanie)"});
#line 219
 testRunner.When("User selects following Objects from the expandable multiselect", ((string)(null)), table973, "When ");
#line hidden
#line 224
 testRunner.When("User clicks \'UPDATE ALL CHANGES\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 225
 testRunner.And("User clicks \'UPDATE PROJECT\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 226
 testRunner.Then("\'3 objects queued for onboarding, 0 objects offboarded\' text is displayed on inli" +
                        "ne success banner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table974 = new TechTalk.SpecFlow.Table(new string[] {
                            "Objects"});
                table974.AddRow(new string[] {
                            "000F977AC8824FE39B8@bclabs.local (Spruill, Shea)"});
                table974.AddRow(new string[] {
                            "002B5DC7D4D34D5C895@bclabs.local (Collor, Christopher)"});
                table974.AddRow(new string[] {
                            "003F5D8E1A844B1FAA5@bclabs.local (Hunter, Melanie)"});
#line 227
 testRunner.Then("following objects were not found", ((string)(null)), table974, "Then ");
#line hidden
#line 232
 testRunner.Then("Objects are displayed in alphabetical order on the Admin page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 233
 testRunner.When("User navigates to the \'Users\' tab on Project Scope Changes page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 234
 testRunner.When("User expands multiselect to add objects", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 235
 testRunner.Then("Objects are displayed in alphabetical order on the Admin page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("EvergreenJnr_AdminPage_CheckThatSelectAllCheckboxIsWorkingCorrectlyOnAdminPage")]
        [NUnit.Framework.CategoryAttribute("Evergreen")]
        [NUnit.Framework.CategoryAttribute("Admin")]
        [NUnit.Framework.CategoryAttribute("EvergreenJnr_AdminPage")]
        [NUnit.Framework.CategoryAttribute("AdminPage")]
        [NUnit.Framework.CategoryAttribute("Projects")]
        [NUnit.Framework.CategoryAttribute("Cleanup")]
        [NUnit.Framework.CategoryAttribute("DAS11758")]
        [NUnit.Framework.CategoryAttribute("DAS14190")]
        [NUnit.Framework.CategoryAttribute("DAS15528")]
        public virtual void EvergreenJnr_AdminPage_CheckThatSelectAllCheckboxIsWorkingCorrectlyOnAdminPage()
        {
            string[] tagsOfScenario = new string[] {
                    "Evergreen",
                    "Admin",
                    "EvergreenJnr_AdminPage",
                    "AdminPage",
                    "Projects",
                    "Cleanup",
                    "DAS11758",
                    "DAS14190",
                    "DAS15528"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AdminPage_CheckThatSelectAllCheckboxIsWorkingCorrectlyOnAdminPage", null, new string[] {
                        "Evergreen",
                        "Admin",
                        "EvergreenJnr_AdminPage",
                        "AdminPage",
                        "Projects",
                        "Cleanup",
                        "DAS11758",
                        "DAS14190",
                        "DAS15528"});
#line 238
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table975 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProjectName",
                            "Scope",
                            "ProjectTemplate",
                            "Mode"});
                table975.AddRow(new string[] {
                            "001Checkbox11758",
                            "All Users",
                            "None",
                            "Standalone Project"});
#line 240
 testRunner.When("Project created via API and opened", ((string)(null)), table975, "When ");
#line hidden
                TechTalk.SpecFlow.Table table976 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProjectName",
                            "Scope",
                            "ProjectTemplate",
                            "Mode"});
                table976.AddRow(new string[] {
                            "002Checkbox11758",
                            "All Users",
                            "None",
                            "Standalone Project"});
#line 243
 testRunner.And("Project created via API and opened", ((string)(null)), table976, "And ");
#line hidden
                TechTalk.SpecFlow.Table table977 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProjectName",
                            "Scope",
                            "ProjectTemplate",
                            "Mode"});
                table977.AddRow(new string[] {
                            "003Checkbox11758",
                            "All Users",
                            "None",
                            "Standalone Project"});
#line 246
 testRunner.And("Project created via API and opened", ((string)(null)), table977, "And ");
#line hidden
#line 249
 testRunner.When("User clicks \'Admin\' on the left-hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 250
 testRunner.Then("\'Admin\' list should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 251
 testRunner.When("User navigates to the \'Projects\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 252
 testRunner.Then("\'001Checkbox11758\' content is displayed in the \'Project\' column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 253
 testRunner.Then("\'002Checkbox11758\' content is displayed in the \'Project\' column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 254
 testRunner.Then("\'003Checkbox11758\' content is displayed in the \'Project\' column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 255
 testRunner.When("User selects all rows on the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 256
 testRunner.Then("Select All checkbox have full checked state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table978 = new TechTalk.SpecFlow.Table(new string[] {
                            "SelectedRowsName"});
                table978.AddRow(new string[] {
                            "001Checkbox11758"});
#line 257
 testRunner.When("User select \"Project\" rows in the grid", ((string)(null)), table978, "When ");
#line hidden
#line 260
 testRunner.Then("Select All checkbox have indeterminate checked state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 261
 testRunner.When("User deselect all rows on the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 262
 testRunner.Then("Select All checkbox have unchecked state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 263
 testRunner.When("User enters \"Checkbox11758\" text in the Search field for \"Project\" column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 264
 testRunner.When("User selects all rows on the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 265
 testRunner.Then("Select All checkbox have indeterminate checked state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 266
 testRunner.When("User removes selected item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 267
 testRunner.Then("\'The selected projects have been deleted\' text is displayed on inline success ban" +
                        "ner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 268
 testRunner.Then("Select All checkbox have unchecked state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("EvergreenJnr_AdminPage_CheckThatTheEditListFunctionIsHiddenAfterCancelingCreating" +
            "ProjectFromTheMainLists")]
        [NUnit.Framework.CategoryAttribute("Evergreen")]
        [NUnit.Framework.CategoryAttribute("Admin")]
        [NUnit.Framework.CategoryAttribute("EvergreenJnr_AdminPage")]
        [NUnit.Framework.CategoryAttribute("AdminPage")]
        [NUnit.Framework.CategoryAttribute("Projects")]
        [NUnit.Framework.CategoryAttribute("DAS12578")]
        [NUnit.Framework.CategoryAttribute("DAS12999")]
        [NUnit.Framework.CategoryAttribute("DAS13429")]
        [NUnit.Framework.CategoryAttribute("Cleanup")]
        [NUnit.Framework.TestCaseAttribute("Devices", "Hostname", "TestList6589", null)]
        [NUnit.Framework.TestCaseAttribute("Users", "Username", "TestList6588", null)]
        [NUnit.Framework.TestCaseAttribute("Mailboxes", "Email Address", "TestList6587", null)]
        public virtual void EvergreenJnr_AdminPage_CheckThatTheEditListFunctionIsHiddenAfterCancelingCreatingProjectFromTheMainLists(string listName, string columnName, string dynamicListName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Evergreen",
                    "Admin",
                    "EvergreenJnr_AdminPage",
                    "AdminPage",
                    "Projects",
                    "DAS12578",
                    "DAS12999",
                    "DAS13429",
                    "Cleanup"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AdminPage_CheckThatTheEditListFunctionIsHiddenAfterCancelingCreating" +
                    "ProjectFromTheMainLists", null, @__tags);
#line 271
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 272
 testRunner.When(string.Format("User clicks \'{0}\' on the left-hand menu", listName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 273
 testRunner.Then(string.Format("\'All {0}\' list should be displayed to the user", listName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 274
 testRunner.When(string.Format("User clicks on \'{0}\' column header", columnName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 275
 testRunner.And(string.Format("User create dynamic list with \"{0}\" name on \"{1}\" page", dynamicListName, listName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 276
 testRunner.Then(string.Format("\"{0}\" list is displayed to user", dynamicListName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 277
 testRunner.When("User selects \'Project\' in the \'Create\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 278
 testRunner.Then("Page with \'Create Project\' subheader is displayed to user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 279
 testRunner.When("User clicks \'CANCEL\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 280
 testRunner.Then(string.Format("\"{0}\" list is displayed to user", dynamicListName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 281
 testRunner.And("Edit List menu is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 282
 testRunner.When("User clicks \'Admin\' on the left-hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 283
 testRunner.Then("\'Admin\' list should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 284
 testRunner.When("User clicks \'CREATE PROJECT\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 285
 testRunner.Then("Page with \'Create Project\' subheader is displayed to user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 286
 testRunner.When("User enters \'TestProject7894\' text to \'Project Name\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 287
 testRunner.And("User selects \'All Devices\' option from \'Scope\' autocomplete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 288
 testRunner.When("User clicks \'CANCEL\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 289
 testRunner.Then("Page with \'Projects\' header is displayed to user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

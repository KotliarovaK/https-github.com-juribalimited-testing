// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DashworksTestAutomationCore.Tests.EvergreenJnr.EvergreenJnr_AdminPage.SelfService.OutsideUsage
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("OutsideUsage", Description="\tRun Self Service related tests in whole project ", SourceFile="Tests\\EvergreenJnr\\EvergreenJnr_AdminPage\\SelfService\\OutsideUsage\\OutsideUsage.f" +
        "eature", SourceLine=0)]
    public partial class OutsideUsageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "OutsideUsage.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "OutsideUsage", "\tRun Self Service related tests in whole project ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
#line 5
 testRunner.Given("User is logged in to the Evergreen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.Then("Evergreen Dashboards page should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AdminPage_EvergreenJnr_CheckApplicationSelfServiceColumns", new string[] {
                "Evergreen",
                "Admin",
                "EvergreenJnr_AdminPage",
                "SelfService",
                "DAS20791",
                "Cleanup"}, SourceLine=8)]
        public virtual void EvergreenJnr_AdminPage_EvergreenJnr_CheckApplicationSelfServiceColumns()
        {
            string[] tagsOfScenario = new string[] {
                    "Evergreen",
                    "Admin",
                    "EvergreenJnr_AdminPage",
                    "SelfService",
                    "DAS20791",
                    "Cleanup"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AdminPage_EvergreenJnr_CheckApplicationSelfServiceColumns", null, new string[] {
                        "Evergreen",
                        "Admin",
                        "EvergreenJnr_AdminPage",
                        "SelfService",
                        "DAS20791",
                        "Cleanup"});
#line 9
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1687 = new TechTalk.SpecFlow.Table(new string[] {
                            "ItemName"});
                table1687.AddRow(new string[] {
                            "VSCmdShell"});
#line 10
 testRunner.When("User create static list with \"DAS_20791\" name on \"Applications\" page with followi" +
                        "ng items", ((string)(null)), table1687, "When ");
#line hidden
                TechTalk.SpecFlow.Table table1688 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ServiceIdentifier",
                            "Enabled",
                            "AllowAnonymousUsers",
                            "Scope"});
                table1688.AddRow(new string[] {
                            "DAS_20791_SS",
                            "20791_SI",
                            "true",
                            "true",
                            "DAS_20791"});
#line 17
 testRunner.When("User creates Self Service via API and open it", ((string)(null)), table1688, "When ");
#line hidden
                TechTalk.SpecFlow.Table table1689 = new TechTalk.SpecFlow.Table(new string[] {
                            "ComponentName",
                            "ProjectName",
                            "OwnerPermission",
                            "ShowInSelfService"});
                table1689.AddRow(new string[] {
                            "AOC Name",
                            "2004 Rollout",
                            "Do not allow owner to be changed",
                            "true"});
#line 20
 testRunner.When("User creates new application ownership component for \'Welcome\' Self Service page " +
                        "via API", ((string)(null)), table1689, "When ");
#line hidden
#line 24
 testRunner.When("User clicks \'Applications\' on the left-hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 25
 testRunner.Then("\'All Applications\' list should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 26
 testRunner.When("User clicks the Columns button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 27
 testRunner.Then("Columns panel is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1690 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table1690.AddRow(new string[] {
                            "20791_SI: Welcome Page Status"});
                table1690.AddRow(new string[] {
                            "20791_SI: Welcome Page Status Date"});
                table1690.AddRow(new string[] {
                            "20791_SI: Thank You Page Status"});
                table1690.AddRow(new string[] {
                            "20791_SI: Thank You Page Status Date"});
                table1690.AddRow(new string[] {
                            "20791_SI: Link"});
#line 28
 testRunner.When("ColumnName is entered into the search box and the selection is clicked", ((string)(null)), table1690, "When ");
#line hidden
#line 35
 testRunner.When("User clicks on \'20791_SI: Welcome Page Status\' column header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1691 = new TechTalk.SpecFlow.Table(new string[] {
                            "Content"});
                table1691.AddRow(new string[] {
                            "Page not viewed"});
                table1691.AddRow(new string[] {
                            "Page not viewed"});
#line 36
 testRunner.Then("\'20791_SI: Welcome Page Status\' column contains following content", ((string)(null)), table1691, "Then ");
#line hidden
#line 40
 testRunner.When("User clicks on \'20791_SI: Welcome Page Status Date\' column header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1692 = new TechTalk.SpecFlow.Table(new string[] {
                            "Content"});
                table1692.AddRow(new string[] {
                            ""});
#line 41
 testRunner.Then("\'20791_SI: Welcome Page Status Date\' column contains following content", ((string)(null)), table1692, "Then ");
#line hidden
#line 44
 testRunner.When("User clicks on \'20791_SI: Thank You Page Status\' column header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1693 = new TechTalk.SpecFlow.Table(new string[] {
                            "Content"});
                table1693.AddRow(new string[] {
                            "Page not viewed"});
                table1693.AddRow(new string[] {
                            "Page not viewed"});
#line 45
 testRunner.Then("\'20791_SI: Thank You Page Status\' column contains following content", ((string)(null)), table1693, "Then ");
#line hidden
#line 49
 testRunner.When("User scroll right to the \'20791_SI: Link\' column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 50
 testRunner.When("User clicks on \'20791_SI: Thank You Page Status Date\' column header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1694 = new TechTalk.SpecFlow.Table(new string[] {
                            "Content"});
                table1694.AddRow(new string[] {
                            ""});
#line 51
 testRunner.Then("\'20791_SI: Thank You Page Status Date\' column contains following content", ((string)(null)), table1694, "Then ");
#line hidden
#line 54
 testRunner.When("User clicks on \'20791_SI: Link\' column header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1695 = new TechTalk.SpecFlow.Table(new string[] {
                            "Content"});
                table1695.AddRow(new string[] {
                            "/20791_SI?ObjectId=0007AD15-8C65-4E6A-841E-F45E3CD99C49"});
                table1695.AddRow(new string[] {
                            "/20791_SI?ObjectId=00445C1C-05F0-4738-A2B0-AA53E7E7CAF9"});
#line 55
 testRunner.Then("\'20791_SI: Link\' column contains following content", ((string)(null)), table1695, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

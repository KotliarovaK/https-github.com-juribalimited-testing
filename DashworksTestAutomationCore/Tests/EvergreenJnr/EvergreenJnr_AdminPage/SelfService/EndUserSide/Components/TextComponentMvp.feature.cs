// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DashworksTestAutomationCore.Tests.EvergreenJnr.EvergreenJnr_AdminPage.SelfService.EndUserSide.Components
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("TextComponentMvp", Description="\tScenarios related to Text component on End User page", SourceFile="Tests\\EvergreenJnr\\EvergreenJnr_AdminPage\\SelfService\\EndUserSide\\Components\\Text" +
        "ComponentMvp.feature", SourceLine=0)]
    public partial class TextComponentMvpFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TextComponentMvp.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "TextComponentMvp", "\tScenarios related to Text component on End User page", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
#line 5
 testRunner.Given("User is logged in to the Evergreen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.Then("Evergreen Dashboards page should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AdminPage_EvergreenJnr_AdminPage_CheckDisplayAndFormatingOfTextCompo" +
            "nentOnEndUserSelfService", new string[] {
                "Evergreen",
                "Admin",
                "EvergreenJnr_AdminPage",
                "SelfService",
                "DAS20050",
                "Cleanup",
                "SelfServiceMVP"}, SourceLine=8)]
        public virtual void EvergreenJnr_AdminPage_EvergreenJnr_AdminPage_CheckDisplayAndFormatingOfTextComponentOnEndUserSelfService()
        {
            string[] tagsOfScenario = new string[] {
                    "Evergreen",
                    "Admin",
                    "EvergreenJnr_AdminPage",
                    "SelfService",
                    "DAS20050",
                    "Cleanup",
                    "SelfServiceMVP"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AdminPage_EvergreenJnr_AdminPage_CheckDisplayAndFormatingOfTextCompo" +
                    "nentOnEndUserSelfService", null, new string[] {
                        "Evergreen",
                        "Admin",
                        "EvergreenJnr_AdminPage",
                        "SelfService",
                        "DAS20050",
                        "Cleanup",
                        "SelfServiceMVP"});
#line 9
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1659 = new TechTalk.SpecFlow.Table(new string[] {
                            "ItemName"});
                table1659.AddRow(new string[] {
                            "VSCmdShell"});
#line 10
 testRunner.When("User create static list with \"DAS_20050\" name on \"Applications\" page with followi" +
                        "ng items", ((string)(null)), table1659, "When ");
#line hidden
                TechTalk.SpecFlow.Table table1660 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ServiceIdentifier",
                            "Enabled",
                            "AllowAnonymousUsers",
                            "Scope"});
                table1660.AddRow(new string[] {
                            "DAS_20050_SS_1",
                            "20050_1_SI",
                            "true",
                            "true",
                            "DAS_20050"});
#line 17
 testRunner.When("User creates Self Service via API and open it", ((string)(null)), table1660, "When ");
#line hidden
                TechTalk.SpecFlow.Table table1661 = new TechTalk.SpecFlow.Table(new string[] {
                            "ComponentName",
                            "ExtraPropertiesText",
                            "ShowInSelfService"});
                table1661.AddRow(new string[] {
                            "Text_Component_Name_1",
                            "<h1><strong>bold </strong><em>italic </em><u>underline</u><p>normal</p><em>italic" +
                                " </em>heading1</h1>",
                            "true"});
                table1661.AddRow(new string[] {
                            "Text_Component_Name_2",
                            "<p>normal</p>",
                            "true"});
#line 20
 testRunner.When("User creates new text component for \'Welcome\' Self Service page via API", ((string)(null)), table1661, "When ");
#line hidden
                TechTalk.SpecFlow.Table table1662 = new TechTalk.SpecFlow.Table(new string[] {
                            "ComponentName",
                            "ProjectName",
                            "OwnerPermission"});
                table1662.AddRow(new string[] {
                            "AOC Name",
                            "2004 Rollout",
                            "Do not allow owner to be changed"});
#line 24
 testRunner.When("User creates new application ownership component for \'Welcome\' Self Service page " +
                        "via API", ((string)(null)), table1662, "When ");
#line hidden
#line 27
 testRunner.When("User navigates to End User landing page with \'20050_1_SI\' Self Service Identifier" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 28
 testRunner.Then("User sees \'bold \' text styled as \'Bold\' in \'Text_Component_Name_1\' Text Component" +
                        " of \'Welcome\' on end user page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 29
 testRunner.Then("User sees \'italic \' text styled as \'Italic\' in \'Text_Component_Name_1\' Text Compo" +
                        "nent of \'Welcome\' on end user page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 30
 testRunner.Then("User sees \'underline\' text styled as \'Underline\' in \'Text_Component_Name_1\' Text " +
                        "Component of \'Welcome\' on end user page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 31
 testRunner.Then("User sees \'heading1\' text styled as \'Heading 1\' in \'Text_Component_Name_1\' Text C" +
                        "omponent of \'Welcome\' on end user page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 32
 testRunner.Then("User sees \'normal\' text styled as \'Normal\' in \'Text_Component_Name_1\' Text Compon" +
                        "ent of \'Welcome\' on end user page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 33
 testRunner.When("User clicks on \'Continue\' button on end user Self Service page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 34
 testRunner.Then("User sees \'Thank You\' text component \'Thank You\' on end user page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AdminPage_EvergreenJnr_AdminPage_CheckEditingAndChangingOrder", new string[] {
                "Evergreen",
                "Admin",
                "EvergreenJnr_AdminPage",
                "SelfService",
                "DAS20050",
                "Cleanup",
                "SelfServiceMVP"}, SourceLine=36)]
        public virtual void EvergreenJnr_AdminPage_EvergreenJnr_AdminPage_CheckEditingAndChangingOrder()
        {
            string[] tagsOfScenario = new string[] {
                    "Evergreen",
                    "Admin",
                    "EvergreenJnr_AdminPage",
                    "SelfService",
                    "DAS20050",
                    "Cleanup",
                    "SelfServiceMVP"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AdminPage_EvergreenJnr_AdminPage_CheckEditingAndChangingOrder", null, new string[] {
                        "Evergreen",
                        "Admin",
                        "EvergreenJnr_AdminPage",
                        "SelfService",
                        "DAS20050",
                        "Cleanup",
                        "SelfServiceMVP"});
#line 37
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1663 = new TechTalk.SpecFlow.Table(new string[] {
                            "ItemName"});
                table1663.AddRow(new string[] {
                            "VSCmdShell"});
#line 38
 testRunner.When("User create static list with \"DAS_20050_2\" name on \"Applications\" page with follo" +
                        "wing items", ((string)(null)), table1663, "When ");
#line hidden
                TechTalk.SpecFlow.Table table1664 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "ServiceIdentifier",
                            "Enabled",
                            "AllowAnonymousUsers",
                            "Scope"});
                table1664.AddRow(new string[] {
                            "DAS_20050_SS_2",
                            "20050_2_SI",
                            "true",
                            "true",
                            "DAS_20050_2"});
#line 41
 testRunner.When("User creates Self Service via API and open it", ((string)(null)), table1664, "When ");
#line hidden
                TechTalk.SpecFlow.Table table1665 = new TechTalk.SpecFlow.Table(new string[] {
                            "ComponentName",
                            "ExtraPropertiesText",
                            "ShowInSelfService"});
                table1665.AddRow(new string[] {
                            "Text_Component_Name_1",
                            "<p>Text component 1</p>",
                            "true"});
                table1665.AddRow(new string[] {
                            "Text_Component_Name_2",
                            "<p>Text component 2</p>",
                            "true"});
#line 48
 testRunner.When("User creates new text component for \'Welcome\' Self Service page via API", ((string)(null)), table1665, "When ");
#line hidden
                TechTalk.SpecFlow.Table table1666 = new TechTalk.SpecFlow.Table(new string[] {
                            "ComponentName",
                            "ProjectName",
                            "OwnerPermission"});
                table1666.AddRow(new string[] {
                            "AOC Name",
                            "2004 Rollout",
                            "Do not allow owner to be changed"});
#line 52
 testRunner.When("User creates new application ownership component for \'Welcome\' Self Service page " +
                        "via API", ((string)(null)), table1666, "When ");
#line hidden
#line 55
 testRunner.When("User navigates to End User landing page with \'20050_2_SI\' Self Service Identifier" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 56
 testRunner.Then("User sees \'Text component 1\' text styled as \'Normal\' in the Text Component \'Text_" +
                        "Component_Name_1\' that placed on \'1\' position on \'Welcome\' End User page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 57
 testRunner.Then("User sees \'Text component 2\' text styled as \'Normal\' in the Text Component \'Text_" +
                        "Component_Name_2\' that placed on \'2\' position on \'Welcome\' End User page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 58
 testRunner.When("User opens \'DAS_20050_SS_2\' Self Service", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 59
 testRunner.When("User navigates to the \'Builder\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 60
 testRunner.When("User selects \'Move to bottom\' cogmenu option for \'Text\' item type with \'Text_Comp" +
                        "onent_Name_1\' name on Self Service Builder Panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 61
 testRunner.When("User selects \'Edit\' cogmenu option for \'Text\' item type with \'Text_Component_Name" +
                        "_2\' name on Self Service Builder Panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 62
 testRunner.When("User clears text editor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 63
 testRunner.When("User enters \'Text component 0\' text to the text editor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 64
 testRunner.When("User clicks \'UPDATE\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 65
 testRunner.When("User navigates to End User landing page with \'20050_2_SI\' Self Service Identifier" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 66
 testRunner.Then("User sees \'Text component 0\' text styled as \'Normal\' in the Text Component \'Text_" +
                        "Component_Name_2\' that moved to \'1\' position on \'Welcome\' End User page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

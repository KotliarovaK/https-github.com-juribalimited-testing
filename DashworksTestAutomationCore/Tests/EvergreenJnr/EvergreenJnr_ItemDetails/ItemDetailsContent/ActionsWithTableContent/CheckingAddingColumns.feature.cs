// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DashworksTestAutomationCore.Tests.EvergreenJnr.EvergreenJnr_ItemDetails.ItemDetailsContent.ActionsWithTableContent
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("CheckingAddingColumns", Description="\tRuns Item Details Checking Adding Columns related tests", SourceFile="Tests\\EvergreenJnr\\EvergreenJnr_ItemDetails\\ItemDetailsContent\\ActionsWithTableCo" +
        "ntent\\CheckingAddingColumns.feature", SourceLine=0)]
    public partial class CheckingAddingColumnsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "CheckingAddingColumns.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CheckingAddingColumns", "\tRuns Item Details Checking Adding Columns related tests", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
#line 5
 testRunner.Given("User is logged in to the Evergreen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.Then("Evergreen Dashboards page should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForExpandedSections(string pageName, string searchTerm, string mainTabName, string subTabName, string columnName, string checkboxName, string newColumnName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Evergreen",
                    "AllLists",
                    "EvergreenJnr_ItemDetails",
                    "ItemDetailsDisplay",
                    "DAS11732",
                    "DAS12235",
                    "DAS13409",
                    "DAS13657",
                    "DAS14923",
                    "Zion_NewGrid"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForExpandedSectio" +
                    "ns", null, @__tags);
#line 9
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 10
 testRunner.When(string.Format("User navigates to the \'{0}\' details page for \'{1}\' item", pageName, searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.Then(string.Format("Details page for \'{0}\' item is displayed to the user", searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 12
 testRunner.When(string.Format("User navigates to the \'{0}\' left menu item", mainTabName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 13
 testRunner.When(string.Format("User navigates to the \'{0}\' left submenu item", subTabName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3023 = new TechTalk.SpecFlow.Table(new string[] {
                            "checkboxes"});
                table3023.AddRow(new string[] {
                            string.Format("{0}", checkboxName)});
#line 14
 testRunner.When(string.Format("User clicks following checkboxes from Column Settings panel for the \'{0}\' column:" +
                            "", columnName), ((string)(null)), table3023, "When ");
#line hidden
                TechTalk.SpecFlow.Table table3024 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3024.AddRow(new string[] {
                            string.Format("{0}", newColumnName)});
#line 17
 testRunner.Then("following columns added to the table:", ((string)(null)), table3024, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3025 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3025.AddRow(new string[] {
                            string.Format("{0}", newColumnName)});
#line 20
 testRunner.And("content is present in the following newly added columns:", ((string)(null)), table3025, "And ");
#line hidden
#line 23
 testRunner.And("There are no errors in the browser console", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForExpandedSectio" +
            "ns, Variant 0", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS13409",
                "DAS13657",
                "DAS14923",
                "Zion_NewGrid"}, SourceLine=26)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForExpandedSections_Variant0()
        {
#line 9
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForExpandedSections("Device", "30BGMTLBM9PTW5", "Applications", "Evergreen Summary", "Application", "Key", "Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForExpandedSectio" +
            "ns, Variant 1", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS13409",
                "DAS13657",
                "DAS14923",
                "Zion_NewGrid"}, SourceLine=26)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForExpandedSections_Variant1()
        {
#line 9
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForExpandedSections("Application", "Microsoft Office Visio 2000 Solutions - Custom Patterns", "Projects", "Projects", "Project", "Object ID", "Object ID", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForExpandedSectio" +
            "ns, Variant 2", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS13409",
                "DAS13657",
                "DAS14923",
                "Zion_NewGrid"}, SourceLine=26)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForExpandedSections_Variant2()
        {
#line 9
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForExpandedSections("Application", "Microsoft Office Visio 2000 Solutions - Custom Patterns", "Projects", "Projects", "Project", "Object Key", "Object Key", ((string[])(null)));
#line hidden
        }
        
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections(string mainTabName, string subTabName, string columnName, string checkboxName, string newColumnName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Evergreen",
                    "AllLists",
                    "EvergreenJnr_ItemDetails",
                    "ItemDetailsDisplay",
                    "DAS11732",
                    "DAS12053",
                    "DAS12235",
                    "DAS13004",
                    "DAS13657",
                    "Zion_NewGrid"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections" +
                    "", null, @__tags);
#line 32
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 33
 testRunner.When("User clicks \'Devices\' on the left-hand menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 34
 testRunner.Then("\'All Devices\' list should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 35
 testRunner.When("User click content from \"Hostname\" column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 36
 testRunner.And(string.Format("User navigates to the \'{0}\' left menu item", mainTabName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And(string.Format("User navigates to the \'{0}\' left submenu item", subTabName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3026 = new TechTalk.SpecFlow.Table(new string[] {
                            "checkboxes"});
                table3026.AddRow(new string[] {
                            string.Format("{0}", checkboxName)});
#line 38
 testRunner.When(string.Format("User clicks following checkboxes from Column Settings panel for the \'{0}\' column:" +
                            "", columnName), ((string)(null)), table3026, "When ");
#line hidden
                TechTalk.SpecFlow.Table table3027 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3027.AddRow(new string[] {
                            string.Format("{0}", newColumnName)});
#line 41
 testRunner.Then("following columns added to the table:", ((string)(null)), table3027, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3028 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3028.AddRow(new string[] {
                            string.Format("{0}", newColumnName)});
#line 44
 testRunner.And("content is present in the following newly added columns:", ((string)(null)), table3028, "And ");
#line hidden
#line 47
 testRunner.Then("There are no errors in the browser console", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections" +
            ", Variant 0", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12053",
                "DAS12235",
                "DAS13004",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=50)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections_Variant0()
        {
#line 32
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections("Compliance", "Application Issues", "Application", "Package Key", "Package Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections" +
            ", Variant 1", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12053",
                "DAS12235",
                "DAS13004",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=50)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections_Variant1()
        {
#line 32
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections("Projects", "Projects Summary", "Project", "Object ID", "Object ID", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections" +
            ", Variant 2", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12053",
                "DAS12235",
                "DAS13004",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=50)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections_Variant2()
        {
#line 32
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections("Projects", "Projects Summary", "Project", "Key", "Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections" +
            ", Variant 3", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12053",
                "DAS12235",
                "DAS13004",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=50)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections_Variant3()
        {
#line 32
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections("Projects", "Owner Projects Summary", "Username", "Object Key", "Object Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections" +
            ", Variant 4", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12053",
                "DAS12235",
                "DAS13004",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=50)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections_Variant4()
        {
#line 32
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections("Projects", "Owner Projects Summary", "Username", "Key", "Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections" +
            ", Variant 5", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12053",
                "DAS12235",
                "DAS13004",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=50)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections_Variant5()
        {
#line 32
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections("Projects", "Owner Projects Summary", "Username", "Request Type Key", "Request Type Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections" +
            ", Variant 6", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12053",
                "DAS12235",
                "DAS13004",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=50)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections_Variant6()
        {
#line 32
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections("Projects", "Owner Projects Summary", "Username", "Category Key", "Category Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections" +
            ", Variant 7", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12053",
                "DAS12235",
                "DAS13004",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=50)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections_Variant7()
        {
#line 32
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForClosedSections("Projects", "Owner Projects Summary", "Username", "Status Key", "Status Key", ((string[])(null)));
#line hidden
        }
        
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns(string pageName, string searchTerm, string itemName, string mainTabName, string subTabName, string columnName, string checkboxName, string newColumnName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Evergreen",
                    "AllLists",
                    "EvergreenJnr_ItemDetails",
                    "ItemDetailsDisplay",
                    "DAS11732",
                    "DAS12235",
                    "DAS12799",
                    "DAS13657",
                    "Zion_NewGrid"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns", null, @__tags);
#line 61
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 62
 testRunner.When(string.Format("User navigates to the \'{0}\' details page for \'{1}\' item", pageName, searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 63
 testRunner.Then(string.Format("Details page for \'{0}\' item is displayed to the user", searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 64
 testRunner.When(string.Format("User navigates to the \'{0}\' left menu item", mainTabName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 65
 testRunner.And(string.Format("User navigates to the \'{0}\' left submenu item", subTabName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3029 = new TechTalk.SpecFlow.Table(new string[] {
                            "checkboxes"});
                table3029.AddRow(new string[] {
                            string.Format("{0}", checkboxName)});
#line 66
 testRunner.When(string.Format("User clicks following checkboxes from Column Settings panel for the \'{0}\' column:" +
                            "", columnName), ((string)(null)), table3029, "When ");
#line hidden
                TechTalk.SpecFlow.Table table3030 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3030.AddRow(new string[] {
                            string.Format("{0}", newColumnName)});
#line 69
 testRunner.Then("following columns added to the table:", ((string)(null)), table3030, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3031 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3031.AddRow(new string[] {
                            string.Format("{0}", newColumnName)});
#line 72
 testRunner.And("content is present in the following newly added columns:", ((string)(null)), table3031, "And ");
#line hidden
#line 75
 testRunner.Then("There are no errors in the browser console", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 0", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant0()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Device", "30BGMTLBM9PTW5", "Hostname", "Applications", "Evergreen Detail", "Application", "Application Key", "Application Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 1", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant1()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Device", "30BGMTLBM9PTW5", "Hostname", "Applications", "Evergreen Detail", "Application", "Advertisement Key", "Advertisement Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 2", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant2()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Device", "30BGMTLBM9PTW5", "Hostname", "Applications", "Evergreen Detail", "Application", "Group Key", "Group Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 3", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant3()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Device", "30BGMTLBM9PTW5", "Hostname", "Applications", "Evergreen Detail", "Application", "Collection Key", "Collection Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 4", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant4()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Device", "30BGMTLBM9PTW5", "Hostname", "Applications", "Advertisements", "Application", "Key", "Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 5", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant5()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Device", "30BGMTLBM9PTW5", "Hostname", "Applications", "Advertisements", "Application", "Application Key", "Application Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 6", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant6()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Device", "30BGMTLBM9PTW5", "Hostname", "Applications", "Advertisements", "Application", "Site Key", "Site Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 7", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant7()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Device", "30BGMTLBM9PTW5", "Hostname", "Applications", "Advertisements", "Application", "Collection Key", "Collection Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 8", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant8()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Device", "30BGMTLBM9PTW5", "Hostname", "Applications", "Advertisements", "Application", "Program Key", "Program Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 9", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant9()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Device", "30BGMTLBM9PTW5", "Hostname", "Applications", "Collections", "Collection", "Key", "Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 10", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant10()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Device", "30BGMTLBM9PTW5", "Hostname", "Applications", "Collections", "Collection", "Site Key", "Site Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 11", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant11()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Application", "Microsoft Office Visio 2000 Solutions - Custom Patterns", "Application", "Distribution", "Devices", "Device", "Computer Key", "Computer Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 12", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant12()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Application", "Microsoft Office Visio 2000 Solutions - Custom Patterns", "Application", "Distribution", "Devices", "Device", "Owner Object Key", "Owner Object Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 13", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant13()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Mailbox", "aaron.u.flores@dwlabs.local", "Email Address", "Users", "Groups", "Domain", "Key", "Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 14", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant14()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Mailbox", "aaron.u.flores@dwlabs.local", "Email Address", "Users", "Mailbox Permissions", "Domain", "Key", "Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 15", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant15()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Mailbox", "aaron.u.flores@dwlabs.local", "Email Address", "Users", "Mailbox Permissions", "Domain", "Via Group Object Key", "Via Group Object Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns, Variant 16", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=78)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns_Variant16()
        {
#line 61
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumns("Mailbox", "aaron.u.flores@dwlabs.local", "Email Address", "Users", "Mailbox Permissions", "Domain", "Access Category Key", "Access Category Key", ((string[])(null)));
#line hidden
        }
        
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForDetailsTab(string pageName, string searchTerm, string itemName, string mainTabName, string subTabName, string columnName, string checkboxName, string newColumnName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Evergreen",
                    "AllLists",
                    "EvergreenJnr_ItemDetails",
                    "ItemDetailsDisplay",
                    "DAS11732",
                    "DAS12235",
                    "DAS12799",
                    "DAS13657",
                    "Zion_NewGrid"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForDetailsTab", null, @__tags);
#line 98
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 99
 testRunner.When(string.Format("User navigates to the \'{0}\' details page for \'{1}\' item", pageName, searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 100
 testRunner.Then(string.Format("Details page for \'{0}\' item is displayed to the user", searchTerm), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 101
 testRunner.When(string.Format("User navigates to the \'{0}\' left submenu item", subTabName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3032 = new TechTalk.SpecFlow.Table(new string[] {
                            "checkboxes"});
                table3032.AddRow(new string[] {
                            string.Format("{0}", checkboxName)});
#line 102
 testRunner.When(string.Format("User clicks following checkboxes from Column Settings panel for the \'{0}\' column:" +
                            "", columnName), ((string)(null)), table3032, "When ");
#line hidden
                TechTalk.SpecFlow.Table table3033 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3033.AddRow(new string[] {
                            string.Format("{0}", newColumnName)});
#line 105
 testRunner.Then("following columns added to the table:", ((string)(null)), table3033, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3034 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3034.AddRow(new string[] {
                            string.Format("{0}", newColumnName)});
#line 108
 testRunner.And("content is present in the following newly added columns:", ((string)(null)), table3034, "And ");
#line hidden
#line 111
 testRunner.Then("There are no errors in the browser console", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForDetailsTab, Va" +
            "riant 0", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=114)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForDetailsTab_Variant0()
        {
#line 98
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForDetailsTab("Application", "Microsoft Office Visio 2000 Solutions - Custom Patterns", "Application", "Details", "Advertisements", "Advertisement", "Advertisement Key", "Advertisement Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForDetailsTab, Va" +
            "riant 1", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=114)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForDetailsTab_Variant1()
        {
#line 98
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForDetailsTab("Application", "Microsoft Office Visio 2000 Solutions - Custom Patterns", "Application", "Details", "Advertisements", "Advertisement", "Collection Key", "Collection Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForDetailsTab, Va" +
            "riant 2", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "DAS12799",
                "DAS13657",
                "Zion_NewGrid"}, SourceLine=114)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForDetailsTab_Variant2()
        {
#line 98
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsForDetailsTab("Application", "Microsoft Office Visio 2000 Solutions - Custom Patterns", "Application", "Details", "Programs", "Program", "Program Key", "Program Key", ((string[])(null)));
#line hidden
        }
        
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable(string mainTabName, string subTabName, string newColumnName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Evergreen",
                    "AllLists",
                    "EvergreenJnr_ItemDetails",
                    "ItemDetailsDisplay",
                    "DAS11732",
                    "DAS12235",
                    "Zion_NewGrid"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable", null, @__tags);
#line 120
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 121
 testRunner.When("User navigates to the \'Application\' details page for \'Microsoft Office Visio 2000" +
                        " Solutions - Custom Patterns\' item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 122
 testRunner.Then("Details page for \'Microsoft Office Visio 2000 Solutions - Custom Patterns\' item i" +
                        "s displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 123
 testRunner.When(string.Format("User navigates to the \'{0}\' left menu item", mainTabName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 124
 testRunner.And(string.Format("User navigates to the \'{0}\' left submenu item", subTabName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
 testRunner.And("User opens \'Device\' column settings", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
 testRunner.And("User clicks Column button on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 127
 testRunner.And("User select \"Device\" checkbox on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 128
 testRunner.And("User select \"Installed\" checkbox on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 129
 testRunner.And("User select \"Owner Display Name\" checkbox on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 130
 testRunner.And(string.Format("User select \"{0}\" checkbox on the Column Settings panel", newColumnName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 131
 testRunner.And("User clicks Column button on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3035 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3035.AddRow(new string[] {
                            string.Format("{0}", newColumnName)});
#line 132
 testRunner.Then("following columns added to the table:", ((string)(null)), table3035, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3036 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3036.AddRow(new string[] {
                            string.Format("{0}", newColumnName)});
#line 135
 testRunner.And("content is present in the following newly added columns:", ((string)(null)), table3036, "And ");
#line hidden
#line 138
 testRunner.Then("There are no errors in the browser console", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable, Varia" +
            "nt 0", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "Zion_NewGrid"}, SourceLine=141)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable_Variant0()
        {
#line 120
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable("Distribution", "Devices", "Computer Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable, Varia" +
            "nt 1", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "Zion_NewGrid"}, SourceLine=141)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable_Variant1()
        {
#line 120
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable("Distribution", "Devices", "Advertisement Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable, Varia" +
            "nt 2", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "Zion_NewGrid"}, SourceLine=141)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable_Variant2()
        {
#line 120
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable("Distribution", "Devices", "Collection Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable, Varia" +
            "nt 3", new string[] {
                "Evergreen",
                "AllLists",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11732",
                "DAS12235",
                "Zion_NewGrid"}, SourceLine=141)]
        public virtual void EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable_Variant3()
        {
#line 120
this.EvergreenJnr_AllLists_CheckThatDataIsDisplayedAfterAddingColumnsToTheTable("Distribution", "Devices", "Program Key", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_DevicesList_CheckThatSelectedCheckboxesMatchTheColumnsInTheTableOnTh" +
            "eDetailsPage", new string[] {
                "Evergreen",
                "Devices",
                "EvergreenJnr_ItemDetails",
                "ItemDetailsDisplay",
                "DAS11393",
                "DAS12765",
                "DAS13657",
                "Not_Run"}, SourceLine=148)]
        public virtual void EvergreenJnr_DevicesList_CheckThatSelectedCheckboxesMatchTheColumnsInTheTableOnTheDetailsPage()
        {
            string[] tagsOfScenario = new string[] {
                    "Evergreen",
                    "Devices",
                    "EvergreenJnr_ItemDetails",
                    "ItemDetailsDisplay",
                    "DAS11393",
                    "DAS12765",
                    "DAS13657",
                    "Not_Run"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_DevicesList_CheckThatSelectedCheckboxesMatchTheColumnsInTheTableOnTh" +
                    "eDetailsPage", null, new string[] {
                        "Evergreen",
                        "Devices",
                        "EvergreenJnr_ItemDetails",
                        "ItemDetailsDisplay",
                        "DAS11393",
                        "DAS12765",
                        "DAS13657",
                        "Not_Run"});
#line 149
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 150
 testRunner.When("User navigates to the \'Device\' details page for \'01WNOSNMP5QLXC\' item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 151
 testRunner.Then("Details page for \'01WNOSNMP5QLXC\' item is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 152
 testRunner.When("User navigates to the \'Projects\' left menu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 153
 testRunner.And("User navigates to the \'Projects Summary\' left submenu item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 154
 testRunner.And("User opens \'Project Type\' column settings", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 155
 testRunner.And("User clicks Column button on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 156
 testRunner.And("User select \"Project\" checkbox on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 157
 testRunner.And("User select \"Project Type\" checkbox on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 158
 testRunner.And("User select \"Category\" checkbox on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 159
 testRunner.And("User select \"Key\" checkbox on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 160
 testRunner.And("User select \"Object ID\" checkbox on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 161
 testRunner.And("User clicks Column button on the Column Settings panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3037 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3037.AddRow(new string[] {
                            "Key"});
                table3037.AddRow(new string[] {
                            "Object ID"});
#line 162
 testRunner.Then("following columns added to the table:", ((string)(null)), table3037, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3038 = new TechTalk.SpecFlow.Table(new string[] {
                            "ColumnName"});
                table3038.AddRow(new string[] {
                            "Key"});
                table3038.AddRow(new string[] {
                            "Object ID"});
                table3038.AddRow(new string[] {
                            "Bucket"});
                table3038.AddRow(new string[] {
                            "Ring"});
                table3038.AddRow(new string[] {
                            "Path"});
                table3038.AddRow(new string[] {
                            "Workflow"});
                table3038.AddRow(new string[] {
                            "Status"});
                table3038.AddRow(new string[] {
                            "Date"});
                table3038.AddRow(new string[] {
                            "Slot"});
                table3038.AddRow(new string[] {
                            "Readiness"});
#line 166
 testRunner.Then("following columns are displayed on the Item details page:", ((string)(null)), table3038, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3039 = new TechTalk.SpecFlow.Table(new string[] {
                            "Checkbox"});
                table3039.AddRow(new string[] {
                            "Key"});
                table3039.AddRow(new string[] {
                            "Object ID"});
                table3039.AddRow(new string[] {
                            "Bucket"});
                table3039.AddRow(new string[] {
                            "Ring"});
                table3039.AddRow(new string[] {
                            "Path"});
                table3039.AddRow(new string[] {
                            "Workflow"});
                table3039.AddRow(new string[] {
                            "Status"});
                table3039.AddRow(new string[] {
                            "Date"});
                table3039.AddRow(new string[] {
                            "Slot"});
                table3039.AddRow(new string[] {
                            "Readiness"});
#line 178
 testRunner.And("Checkboxes are checked on the Column Settings panel for \"Key\" Column Settings pan" +
                        "el:", ((string)(null)), table3039, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DashworksTestAutomationCore.Tests.EvergreenJnr.EvergreenJnr_ActionsPanel.ActionsPanel.BulkUpdate_UpdateCustomField
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("UpdateCustomFieldPart1", Description="\tRuns Actions Panel related tests", SourceFile="Tests\\EvergreenJnr\\EvergreenJnr_ActionsPanel\\ActionsPanel\\BulkUpdate_UpdateCustom" +
        "Field\\UpdateCustomFieldPart1.feature", SourceLine=0)]
    public partial class UpdateCustomFieldPart1Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "UpdateCustomFieldPart1.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "UpdateCustomFieldPart1", "\tRuns Actions Panel related tests", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
#line 5
 testRunner.Given("User is logged in to the Evergreen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.Then("Evergreen Dashboards page should be displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation(string listName, string columnName, string row, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Evergreen",
                    "EvergreenJnr_ActionsPanel",
                    "BulkUpdate",
                    "DAS17878",
                    "Not_Ready"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation", null, @__tags);
#line 10
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 11
 testRunner.When(string.Format("User clicks \'{0}\' on the left-hand menu", listName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 12
 testRunner.When("User clicks the Actions button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 13
 testRunner.Then("Actions panel is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                            "SelectedRowsName"});
                table72.AddRow(new string[] {
                            string.Format("{0}", row)});
#line 14
 testRunner.When(string.Format("User select \"{0}\" rows in the grid", columnName), ((string)(null)), table72, "When ");
#line hidden
#line 17
 testRunner.When("User selects \'Bulk update\' in the \'Action\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 18
 testRunner.And("User selects \'Update custom field\' in the \'Bulk Update Type\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("User selects \'Phoenix Field\' option from \'Custom Field\' autocomplete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.Then("\'UPDATE\' button is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 21
 testRunner.When("User selects \'Remove all values\' in the \'Update Values\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 22
 testRunner.Then("\'UPDATE\' button is not disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation, Devices" +
            "", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=25)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation_Devices()
        {
#line 10
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation("Devices", "Hostname", "00HA7MKAVVFDAV", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation, Users", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=25)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation_Users()
        {
#line 10
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation("Users", "Username", "003F5D8E1A844B1FAA5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation, Applica" +
            "tions", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=25)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation_Applications()
        {
#line 10
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation("Applications", "Application", "7-Zip 16.02 (x64)", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation, Mailbox" +
            "es", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=25)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation_Mailboxes()
        {
#line 10
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveAllValuesValidation("Mailboxes", "Email Address", "002B5DC7D4D34D5C895@bclabs.local", ((string[])(null)));
#line hidden
        }
        
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation(string listName, string columnName, string row, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Evergreen",
                    "EvergreenJnr_ActionsPanel",
                    "BulkUpdate",
                    "DAS17878",
                    "DAS18031",
                    "Not_Ready"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation", null, @__tags);
#line 33
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 34
 testRunner.When(string.Format("User clicks \'{0}\' on the left-hand menu", listName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 35
 testRunner.When("User clicks the Actions button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 36
 testRunner.Then("Actions panel is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                            "SelectedRowsName"});
                table73.AddRow(new string[] {
                            string.Format("{0}", row)});
#line 37
 testRunner.When(string.Format("User select \"{0}\" rows in the grid", columnName), ((string)(null)), table73, "When ");
#line hidden
#line 40
 testRunner.When("User selects \'Bulk update\' in the \'Action\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 41
 testRunner.And("User selects \'Update custom field\' in the \'Bulk Update Type\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And("User selects \'Phoenix Field\' option from \'Custom Field\' autocomplete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.And("User selects \'Replace all values\' in the \'Update Values\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.When("User adds \'1\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 45
 testRunner.When("User adds \'2\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 46
 testRunner.When("User adds \'3\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 47
 testRunner.When("User adds \'4\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 48
 testRunner.When("User adds \'5\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 49
 testRunner.When("User adds \'6\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 50
 testRunner.When("User adds \'7\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 51
 testRunner.When("User adds \'8\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 52
 testRunner.When("User adds \'9\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 53
 testRunner.When("User adds \'10\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 55
 testRunner.Then("\'Value limit has been reached\' add button tooltip is displayed for \'Value\' textbo" +
                        "x", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
 testRunner.Then("\'UPDATE\' button is not disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation, Device" +
            "s", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "DAS18031",
                "Not_Ready"}, SourceLine=59)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation_Devices()
        {
#line 33
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation("Devices", "Hostname", "00YTY8U3ZYP2WT", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation, Users", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "DAS18031",
                "Not_Ready"}, SourceLine=59)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation_Users()
        {
#line 33
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation("Users", "Username", "00A5B910A1004CF5AC4", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation, Applic" +
            "ations", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "DAS18031",
                "Not_Ready"}, SourceLine=59)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation_Applications()
        {
#line 33
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation("Applications", "Application", "0004 - Adobe Acrobat Reader 5.0.5 Francais", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation, Mailbo" +
            "xes", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "DAS18031",
                "Not_Ready"}, SourceLine=59)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation_Mailboxes()
        {
#line 33
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceAllValuesValidation("Mailboxes", "Email Address", "00DB4000EDD84951993@bclabs.local", ((string[])(null)));
#line hidden
        }
        
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation(string listName, string columnName, string row, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Evergreen",
                    "EvergreenJnr_ActionsPanel",
                    "BulkUpdate",
                    "DAS17878",
                    "Not_Ready"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation", null, @__tags);
#line 67
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 68
 testRunner.When(string.Format("User clicks \'{0}\' on the left-hand menu", listName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 69
 testRunner.When("User clicks the Actions button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 70
 testRunner.Then("Actions panel is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                            "SelectedRowsName"});
                table74.AddRow(new string[] {
                            string.Format("{0}", row)});
#line 71
 testRunner.When(string.Format("User select \"{0}\" rows in the grid", columnName), ((string)(null)), table74, "When ");
#line hidden
#line 74
 testRunner.When("User selects \'Bulk update\' in the \'Action\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 75
 testRunner.And("User selects \'Update custom field\' in the \'Bulk Update Type\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 76
 testRunner.And("User selects \'Phoenix Field\' option from \'Custom Field\' autocomplete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
 testRunner.And("User selects \'Add to existing values\' in the \'Update Values\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
 testRunner.When("User adds \'test\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 79
 testRunner.Then("\'UPDATE\' button is not disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation, Dev" +
            "ices", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=82)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation_Devices()
        {
#line 67
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation("Devices", "Hostname", "00YTY8U3ZYP2WT", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation, Use" +
            "rs", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=82)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation_Users()
        {
#line 67
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation("Users", "Username", "00A5B910A1004CF5AC4", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation, App" +
            "lications", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=82)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation_Applications()
        {
#line 67
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation("Applications", "Application", "0004 - Adobe Acrobat Reader 5.0.5 Francais", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation, Mai" +
            "lboxes", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=82)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation_Mailboxes()
        {
#line 67
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForAddToExistingValuesValidation("Mailboxes", "Email Address", "00DB4000EDD84951993@bclabs.local", ((string[])(null)));
#line hidden
        }
        
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation(string listName, string columnName, string row, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Evergreen",
                    "EvergreenJnr_ActionsPanel",
                    "BulkUpdate",
                    "DAS17878",
                    "Not_Ready"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation", null, @__tags);
#line 90
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 91
 testRunner.When(string.Format("User clicks \'{0}\' on the left-hand menu", listName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 92
 testRunner.When("User clicks the Actions button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 93
 testRunner.Then("Actions panel is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                            "SelectedRowsName"});
                table75.AddRow(new string[] {
                            string.Format("{0}", row)});
#line 94
 testRunner.When(string.Format("User select \"{0}\" rows in the grid", columnName), ((string)(null)), table75, "When ");
#line hidden
#line 97
 testRunner.When("User selects \'Bulk update\' in the \'Action\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 98
 testRunner.And("User selects \'Update custom field\' in the \'Bulk Update Type\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.And("User selects \'Phoenix Field\' option from \'Custom Field\' autocomplete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 100
 testRunner.And("User selects \'Remove specific values\' in the \'Update Values\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 101
 testRunner.When("User adds \'test\' value from \'Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 102
 testRunner.Then("\'UPDATE\' button is not disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation, De" +
            "vices", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=105)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation_Devices()
        {
#line 90
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation("Devices", "Hostname", "00YTY8U3ZYP2WT", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation, Us" +
            "ers", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=105)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation_Users()
        {
#line 90
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation("Users", "Username", "00A5B910A1004CF5AC4", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation, Ap" +
            "plications", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=105)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation_Applications()
        {
#line 90
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation("Applications", "Application", "0004 - Adobe Acrobat Reader 5.0.5 Francais", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation, Ma" +
            "ilboxes", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=105)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation_Mailboxes()
        {
#line 90
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForRemoveSpecificValuesValidation("Mailboxes", "Email Address", "00DB4000EDD84951993@bclabs.local", ((string[])(null)));
#line hidden
        }
        
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation(string listName, string columnName, string row, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Evergreen",
                    "EvergreenJnr_ActionsPanel",
                    "BulkUpdate",
                    "DAS17878",
                    "Not_Ready"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation", null, @__tags);
#line 113
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 114
 testRunner.When(string.Format("User clicks \'{0}\' on the left-hand menu", listName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 115
 testRunner.When("User clicks the Actions button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 116
 testRunner.Then("Actions panel is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                            "SelectedRowsName"});
                table76.AddRow(new string[] {
                            string.Format("{0}", row)});
#line 117
 testRunner.When(string.Format("User select \"{0}\" rows in the grid", columnName), ((string)(null)), table76, "When ");
#line hidden
#line 120
 testRunner.When("User selects \'Bulk update\' in the \'Action\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 121
 testRunner.And("User selects \'Update custom field\' in the \'Bulk Update Type\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 122
 testRunner.And("User selects \'Phoenix Field\' option from \'Custom Field\' autocomplete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 123
 testRunner.And("User selects \'Replace single value\' in the \'Update Values\' dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 124
 testRunner.When("User enters \'tests\' text to \'Find Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 125
 testRunner.Then("\'UPDATE\' button is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 126
 testRunner.When("User enters \'012\' text to \'Replace Value\' textbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 127
 testRunner.Then("\'UPDATE\' button is not disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation, Devi" +
            "ces", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=130)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation_Devices()
        {
#line 113
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation("Devices", "Hostname", "00YTY8U3ZYP2WT", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation, User" +
            "s", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=130)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation_Users()
        {
#line 113
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation("Users", "Username", "00A5B910A1004CF5AC4", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation, Appl" +
            "ications", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=130)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation_Applications()
        {
#line 113
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation("Applications", "Application", "0004 - Adobe Acrobat Reader 5.0.5 Francais", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation, Mail" +
            "boxes", new string[] {
                "Evergreen",
                "EvergreenJnr_ActionsPanel",
                "BulkUpdate",
                "DAS17878",
                "Not_Ready"}, SourceLine=130)]
        public virtual void EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation_Mailboxes()
        {
#line 113
this.EvergreenJnr_AllLists_CheckUpdateCustomFieldForReplaceSingleValueValidation("Mailboxes", "Email Address", "00DB4000EDD84951993@bclabs.local", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DashworksTestAutomationCore.Tests.Senior.Senior_CreatingProjects
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("CreateMailboxScheduledProject", Description="\tRuns Project related tests", SourceFile="Tests\\Senior\\Senior_CreatingProjects\\MailboxScheduledProject.feature", SourceLine=0)]
    public partial class CreateMailboxScheduledProjectFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "MailboxScheduledProject.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CreateMailboxScheduledProject", "\tRuns Project related tests", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
#line 5
 testRunner.Given("User is logged in to the Projects as Admin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.Then("\"Projects Home\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Projects_CreateMailboxScheduledProject", new string[] {
                "ProjectsOnSenior",
                "Projects_Administration",
                "MailboxScheduledProject"}, SourceLine=8)]
        public virtual void Projects_CreateMailboxScheduledProject()
        {
            string[] tagsOfScenario = new string[] {
                    "ProjectsOnSenior",
                    "Projects_Administration",
                    "MailboxScheduledProject"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Projects_CreateMailboxScheduledProject", null, new string[] {
                        "ProjectsOnSenior",
                        "Projects_Administration",
                        "MailboxScheduledProject"});
#line 9
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 10
 testRunner.When("User clicks create Project button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.Then("\"Create Project\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3864 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProjectName",
                            "ProjectShortName",
                            "ProjectDescription",
                            "ProjectTypeString"});
                table3864.AddRow(new string[] {
                            "000 MailboxScheduledProject",
                            "Mailbox",
                            "MailboxScheduledProject",
                            "MailboxScheduledProject"});
#line 12
 testRunner.When("User creates Project", ((string)(null)), table3864, "When ");
#line hidden
#line 15
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 16
 testRunner.When("User clicks \"Create Project\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 17
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
 testRunner.Then("\"Manage Project Details\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
 testRunner.When("User navigate to Manage link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 20
 testRunner.And("User select \"Manage Users\" option in Management Console", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3865 = new TechTalk.SpecFlow.Table(new string[] {
                            "Username",
                            "FullName",
                            "Password",
                            "ConfirmPassword",
                            "RolesString"});
                table3865.AddRow(new string[] {
                            "AAA0MailboxScheduledProject",
                            "MailboxScheduledProject 0",
                            "1234qwer",
                            "1234qwer",
                            ""});
#line 21
 testRunner.Then("User create a new Dashworks User", ((string)(null)), table3865, "Then ");
#line hidden
#line 24
 testRunner.And("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("created User is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3866 = new TechTalk.SpecFlow.Table(new string[] {
                            "Username",
                            "FullName",
                            "Password",
                            "ConfirmPassword",
                            "RolesString"});
                table3866.AddRow(new string[] {
                            "AAA1MailboxScheduledProject",
                            "MailboxScheduledProject 1",
                            "1234qwer",
                            "1234qwer",
                            ""});
#line 26
 testRunner.And("User create a new Dashworks User", ((string)(null)), table3866, "And ");
#line hidden
#line 29
 testRunner.And("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And("created User is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3867 = new TechTalk.SpecFlow.Table(new string[] {
                            "Username",
                            "FullName",
                            "Password",
                            "ConfirmPassword",
                            "RolesString"});
                table3867.AddRow(new string[] {
                            "AAA2MailboxScheduledProject",
                            "MailboxScheduledProject 2",
                            "1234qwer",
                            "1234qwer",
                            ""});
#line 31
 testRunner.And("User create a new Dashworks User", ((string)(null)), table3867, "And ");
#line hidden
#line 34
 testRunner.And("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And("created User is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.When("User navigate to Dashworks User Site link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 37
 testRunner.And("User navigate to Projects link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.Then("\"Projects Home\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 39
 testRunner.When("User select Project", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 40
 testRunner.Then("User make this Project Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 41
 testRunner.And("Default Project News Title is displayed correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And("User navigate to created Project", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.And("\"Manage Project Details\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("Project Name is displayed correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3868 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowOriginalColumn",
                            "IncludeSiteName",
                            "NotApplicableApplications",
                            "InstalledApplications",
                            "EntitledApplications",
                            "TaskEmailCcEmailAddress",
                            "TaskEmailBccEmailAddress",
                            "StartDate",
                            "EndDate"});
                table3868.AddRow(new string[] {
                            "true",
                            "true",
                            "true",
                            "true",
                            "true",
                            "Test@test.com",
                            "Test@test.com",
                            "8 May 2012",
                            "20 May 2018"});
#line 45
 testRunner.When("User updates the Details page", ((string)(null)), table3868, "When ");
#line hidden
#line 48
 testRunner.Then("Success message is displayed with \"Project was successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.When("User navigate to \"Request Types\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 51
 testRunner.Then("\"Manage Request Types\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 52
 testRunner.When("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3869 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3869.AddRow(new string[] {
                            "1 TestRequestTypeName",
                            "MailboxScheduledProject 1",
                            "User"});
#line 53
 testRunner.And("User create Request Type", ((string)(null)), table3869, "And ");
#line hidden
#line 56
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 57
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 58
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 59
 testRunner.When("User removes created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 60
 testRunner.And("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3870 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3870.AddRow(new string[] {
                            "2 TestRequestTypeName",
                            "MailboxScheduledProject 2",
                            "Application"});
#line 61
 testRunner.And("User create Request Type", ((string)(null)), table3870, "And ");
#line hidden
#line 64
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 65
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 66
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.When("User removes created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 68
 testRunner.And("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3871 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3871.AddRow(new string[] {
                            "3 TestRequestTypeName",
                            "MailboxScheduledProject 3",
                            "Mailbox"});
#line 69
 testRunner.And("User create Request Type", ((string)(null)), table3871, "And ");
#line hidden
#line 72
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 73
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 74
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 75
 testRunner.When("User removes created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 76
 testRunner.And("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3872 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3872.AddRow(new string[] {
                            "1 TestRequestTypeName",
                            "MailboxScheduledProject 1",
                            "User"});
#line 77
 testRunner.And("User create Request Type", ((string)(null)), table3872, "And ");
#line hidden
#line 80
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 81
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 82
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 83
 testRunner.When("User click on the created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3873 = new TechTalk.SpecFlow.Table(new string[] {
                            "DefaultRequestType"});
                table3873.AddRow(new string[] {
                            "true"});
#line 84
 testRunner.And("User updates the Request Type page", ((string)(null)), table3873, "And ");
#line hidden
#line 87
 testRunner.Then("Success message is displayed with \"Request Type successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 88
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 89
 testRunner.Then("created Request Type is a Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 90
 testRunner.When("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3874 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3874.AddRow(new string[] {
                            "2 TestRequestTypeName",
                            "MailboxScheduledProject 2",
                            "Application"});
#line 91
 testRunner.And("User create Request Type", ((string)(null)), table3874, "And ");
#line hidden
#line 94
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 95
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 96
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
 testRunner.When("User click on the created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3875 = new TechTalk.SpecFlow.Table(new string[] {
                            "DefaultRequestType"});
                table3875.AddRow(new string[] {
                            "true"});
#line 98
 testRunner.And("User updates the Request Type page", ((string)(null)), table3875, "And ");
#line hidden
#line 101
 testRunner.Then("Success message is displayed with \"Request Type successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 102
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 103
 testRunner.Then("created Request Type is a Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
 testRunner.When("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3876 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3876.AddRow(new string[] {
                            "3 TestRequestTypeName",
                            "MailboxScheduledProject 3",
                            "Mailbox"});
#line 105
 testRunner.And("User create Request Type", ((string)(null)), table3876, "And ");
#line hidden
#line 108
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 109
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 110
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 111
 testRunner.When("User click on the created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3877 = new TechTalk.SpecFlow.Table(new string[] {
                            "DefaultRequestType"});
                table3877.AddRow(new string[] {
                            "true"});
#line 112
 testRunner.And("User updates the Request Type page", ((string)(null)), table3877, "And ");
#line hidden
#line 115
 testRunner.Then("Success message is displayed with \"Request Type successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 116
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 117
 testRunner.Then("created Request Type is a Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 119
 testRunner.When("User navigate to \"Categories\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 120
 testRunner.Then("\"Manage Categories\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 121
 testRunner.When("User clicks \"Create Category\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3878 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3878.AddRow(new string[] {
                            "User Category",
                            "MailboxScheduledProject",
                            "User"});
#line 122
 testRunner.And("User create Category", ((string)(null)), table3878, "And ");
#line hidden
#line 125
 testRunner.Then("Success message is displayed with \"Category successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 126
 testRunner.When("User clicks \"« Go Back\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 127
 testRunner.Then("created Category is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 128
 testRunner.When("User clicks \"Create Category\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3879 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3879.AddRow(new string[] {
                            "Mailbox Category",
                            "MailboxScheduledProject",
                            "Mailbox"});
#line 129
 testRunner.And("User create Category", ((string)(null)), table3879, "And ");
#line hidden
#line 132
 testRunner.Then("Success message is displayed with \"Category successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 133
 testRunner.When("User clicks \"« Go Back\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 134
 testRunner.Then("created Category is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 135
 testRunner.When("User clicks \"Create Category\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3880 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3880.AddRow(new string[] {
                            "Application Category",
                            "MailboxScheduledProject",
                            "Application"});
#line 136
 testRunner.And("User create Category", ((string)(null)), table3880, "And ");
#line hidden
#line 139
 testRunner.Then("Success message is displayed with \"Category successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 140
 testRunner.When("User clicks \"« Go Back\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 141
 testRunner.Then("created Category is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 143
 testRunner.When("User navigate to \"Stages\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 144
 testRunner.Then("\"Manage Stages\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 145
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3881 = new TechTalk.SpecFlow.Table(new string[] {
                            "StageName"});
                table3881.AddRow(new string[] {
                            "Stage 1"});
#line 146
 testRunner.And("User create Stage", ((string)(null)), table3881, "And ");
#line hidden
#line 149
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 150
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 151
 testRunner.Then("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 152
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3882 = new TechTalk.SpecFlow.Table(new string[] {
                            "StageName"});
                table3882.AddRow(new string[] {
                            "Stage 2"});
#line 153
 testRunner.And("User create Stage", ((string)(null)), table3882, "And ");
#line hidden
#line 156
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 157
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 158
 testRunner.Then("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 159
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3883 = new TechTalk.SpecFlow.Table(new string[] {
                            "StageName"});
                table3883.AddRow(new string[] {
                            "Stage 3"});
#line 160
 testRunner.And("User create Stage", ((string)(null)), table3883, "And ");
#line hidden
#line 163
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 164
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 165
 testRunner.Then("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 167
 testRunner.When("User navigate to \"Mail Templates\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 168
 testRunner.Then("\"Manage Mail Templates\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 169
 testRunner.When("User clicks \"Create Mail Template\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3884 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "SubjectLine",
                            "BodyText"});
                table3884.AddRow(new string[] {
                            "TestMailTemplateName",
                            "MailboxScheduledProject",
                            "TestText",
                            "TestText"});
#line 170
 testRunner.And("User create Mail Template", ((string)(null)), table3884, "And ");
#line hidden
#line 173
 testRunner.Then("Success message is displayed with \"Mail Template successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 175
 testRunner.When("User navigate to \"Tasks\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 176
 testRunner.Then("\"Manage Tasks\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 177
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3885 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3885.AddRow(new string[] {
                            "TestTaskName0",
                            "MailboxScheduledProject",
                            "Stage 1",
                            "Normal",
                            "Radiobutton",
                            "User",
                            "",
                            "true"});
#line 178
 testRunner.And("User creates Task", ((string)(null)), table3885, "And ");
#line hidden
#line 181
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3886 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "TaskImpactsReadiness",
                            "TaskHasAnOwner",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3886.AddRow(new string[] {
                            "true",
                            "DateOnly",
                            "None",
                            "true",
                            "false",
                            "true",
                            "true",
                            "false",
                            "false"});
#line 182
 testRunner.When("User updates the Task page", ((string)(null)), table3886, "When ");
#line hidden
#line 185
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 186
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 187
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 188
 testRunner.When("User navigate to \"Values\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 189
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3887 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3887.AddRow(new string[] {
                            "TestValueName",
                            "Open",
                            "true"});
#line 190
 testRunner.When("User create new Value", ((string)(null)), table3887, "When ");
#line hidden
#line 193
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 194
 testRunner.When("User clicks \"« Go Back to Tasks\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 195
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 197
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3888 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3888.AddRow(new string[] {
                            "TestTaskName1",
                            "ComputerScheduledProject",
                            "Stage 2",
                            "Group",
                            "DropDownList",
                            "User",
                            "ReadinessNnsfc",
                            "true"});
#line 198
 testRunner.And("User creates Task", ((string)(null)), table3888, "And ");
#line hidden
#line 201
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3889 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "TaskImpactsReadiness",
                            "TaskHasAnOwner",
                            "ShowDetails",
                            "BulkUpdate",
                            "GroupTaskDashboard"});
                table3889.AddRow(new string[] {
                            "true",
                            "DateOnly",
                            "Workflow",
                            "true",
                            "true",
                            "true",
                            "false",
                            "false"});
#line 202
 testRunner.When("User updates the Task page", ((string)(null)), table3889, "When ");
#line hidden
#line 205
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 206
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 207
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 208
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3890 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "ApplyToAllCheckbox"});
                table3890.AddRow(new string[] {
                            "TestTaskName2",
                            "MailboxScheduledProject",
                            "Stage 3",
                            "Normal",
                            "Text",
                            "Mailbox",
                            "true"});
#line 209
 testRunner.And("User creates Task", ((string)(null)), table3890, "And ");
#line hidden
#line 212
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3891 = new TechTalk.SpecFlow.Table(new string[] {
                            "TextModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3891.AddRow(new string[] {
                            "SingleLine",
                            "None",
                            "true",
                            "false",
                            "true",
                            "false"});
#line 213
 testRunner.When("User updates the Task page", ((string)(null)), table3891, "When ");
#line hidden
#line 216
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 217
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 218
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 219
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 220
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 222
 testRunner.When("User navigate to \"Teams\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 223
 testRunner.Then("\"Manage Teams\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 224
 testRunner.When("User clicks \"Create Team\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3892 = new TechTalk.SpecFlow.Table(new string[] {
                            "TeamName",
                            "ShortDescription"});
                table3892.AddRow(new string[] {
                            "000 MailboxScheduledProject",
                            "TestText 0"});
#line 225
 testRunner.And("User create Team", ((string)(null)), table3892, "And ");
#line hidden
#line 228
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 229
 testRunner.And("User select user with \"Admin\" name to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 230
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 231
 testRunner.And("User select \"1\" user to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 232
 testRunner.And("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 233
 testRunner.Then("created Team is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 234
 testRunner.And("\"2\" number of Members is displayed for created Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 235
 testRunner.When("User clicks \"Create Team\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3893 = new TechTalk.SpecFlow.Table(new string[] {
                            "TeamName",
                            "ShortDescription"});
                table3893.AddRow(new string[] {
                            "001 MailboxScheduledProject",
                            "TestText 1"});
#line 236
 testRunner.And("User create Team", ((string)(null)), table3893, "And ");
#line hidden
#line 239
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 240
 testRunner.And("User select user with \"Admin\" name to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 241
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 242
 testRunner.And("User select \"2\" user to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 243
 testRunner.And("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 244
 testRunner.Then("created Team is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 245
 testRunner.And("\"2\" number of Members is displayed for created Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 246
 testRunner.When("User clicks \"Create Team\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3894 = new TechTalk.SpecFlow.Table(new string[] {
                            "TeamName",
                            "ShortDescription"});
                table3894.AddRow(new string[] {
                            "002 MailboxScheduledProject",
                            "TestText 2"});
#line 247
 testRunner.And("User create Team", ((string)(null)), table3894, "And ");
#line hidden
#line 250
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 251
 testRunner.And("User select user with \"Admin\" name to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 252
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 253
 testRunner.And("User select \"3\" user to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 254
 testRunner.And("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 255
 testRunner.Then("created Team is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 256
 testRunner.And("\"2\" number of Members is displayed for created Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 258
 testRunner.When("User navigate to \"Groups\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 259
 testRunner.Then("\"Manage Groups\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 260
 testRunner.When("User clicks \"Create Group\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3895 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName"});
                table3895.AddRow(new string[] {
                            "0 MailboxScheduledProject"});
#line 261
 testRunner.And("User create Group owned for \"1\" Team", ((string)(null)), table3895, "And ");
#line hidden
#line 264
 testRunner.Then("created Group is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 265
 testRunner.When("User clicks \"Create Group\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3896 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName"});
                table3896.AddRow(new string[] {
                            "1 MailboxScheduledProject"});
#line 266
 testRunner.And("User create Group owned for \"2\" Team", ((string)(null)), table3896, "And ");
#line hidden
#line 269
 testRunner.Then("created Group is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 270
 testRunner.When("User clicks \"Create Group\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3897 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName"});
                table3897.AddRow(new string[] {
                            "2 MailboxScheduledProject"});
#line 271
 testRunner.And("User create Group owned for \"3\" Team", ((string)(null)), table3897, "And ");
#line hidden
#line 274
 testRunner.Then("created Group is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 275
 testRunner.When("User navigate to \"Teams\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 276
 testRunner.Then("\"Manage Teams\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 277
 testRunner.And("\"1\" number of Groups is displayed for \"3\" Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 279
 testRunner.When("User navigate to \"News\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 280
 testRunner.Then("\"Manage News\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3898 = new TechTalk.SpecFlow.Table(new string[] {
                            "Title",
                            "Text"});
                table3898.AddRow(new string[] {
                            "MailboxScheduledProject",
                            "TestText"});
#line 281
 testRunner.When("User updating News page", ((string)(null)), table3898, "When ");
#line hidden
#line 284
 testRunner.Then("Success message is displayed with \"Project news was successfully updated.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 286
 testRunner.When("User navigate to \"Self Service\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 287
 testRunner.Then("\"Manage Self Service\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3899 = new TechTalk.SpecFlow.Table(new string[] {
                            "EnableSelfServicePortal",
                            "AllowAnonymousUsers",
                            "ThisProjectDefault",
                            "Mode1",
                            "Mode2",
                            "BaseUrl",
                            "NoLink",
                            "DashworksProjectHomepage",
                            "CustomUrl",
                            "CustomUrlTextField"});
                table3899.AddRow(new string[] {
                            "false",
                            "false",
                            "true",
                            "false",
                            "true",
                            "",
                            "false",
                            "false",
                            "true",
                            "http://www.juriba.com"});
#line 288
 testRunner.When("User updates the Details page on Self Service tab", ((string)(null)), table3899, "When ");
#line hidden
#line 291
 testRunner.Then("Success message is displayed with \"Details successfully updated.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 292
 testRunner.When("User navigate to \"Welcome\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3900 = new TechTalk.SpecFlow.Table(new string[] {
                            "AllowUsersToSearch",
                            "AllowToChangeLanguage",
                            "ShowProjectSelector",
                            "ShowObjectDetails",
                            "ShowMoreDetailsLink",
                            "PageDescription",
                            "ProjectName"});
                table3900.AddRow(new string[] {
                            "true",
                            "false",
                            "false",
                            "",
                            "true",
                            "TestText",
                            "MailboxScheduledProject"});
#line 293
 testRunner.And("User updates the Welcome page on Self Service tab", ((string)(null)), table3900, "And ");
#line hidden
#line 296
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 297
 testRunner.When("User navigate to \"Mailbox Ownership\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3901 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowScreen",
                            "ShowCategory",
                            "AllowUsersToSearch",
                            "AllowUsersToSetPrimary",
                            "AllowUsersToAddANote",
                            "PageDescription"});
                table3901.AddRow(new string[] {
                            "true",
                            "false",
                            "false",
                            "false",
                            "false",
                            "MailboxScheduledProject"});
#line 298
 testRunner.And("User updates the Ownership page on Self Service tab", ((string)(null)), table3901, "And ");
#line hidden
#line 301
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 302
 testRunner.When("User navigate to \"Department and Location\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3902 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowScreen",
                            "ShowDepartmentFullPath",
                            "ShowLocationFullPath",
                            "AllowUsersToAddANote",
                            "Department",
                            "DepartmentDoNotPush",
                            "DepartmentPushToOwned",
                            "DepartmentPushToAll",
                            "Location",
                            "LocationDoNotPush",
                            "LocationPushToOwned",
                            "LocationPushToAll",
                            "DepartmentFeed",
                            "HrLocationFeed",
                            "ManualLocationFeed",
                            "HistoricLocationFeed"});
                table3902.AddRow(new string[] {
                            "true",
                            "false",
                            "false",
                            "false",
                            "false",
                            "true",
                            "false",
                            "false",
                            "false",
                            "false",
                            "false",
                            "false",
                            "false",
                            "false",
                            "false",
                            "false"});
#line 303
 testRunner.And("User updates the Department and Location page on Self Service tab", ((string)(null)), table3902, "And ");
#line hidden
#line 306
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 307
 testRunner.When("User navigate to \"Apps List\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3903 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowThisScreen",
                            "ShowCoreApps",
                            "ShowTargetStateReadiness",
                            "ShowRequiredColumnAndSticky",
                            "ShowOnlyApplication",
                            "AllowUsersToAddANote",
                            "PageDescription",
                            "ViewString"});
                table3903.AddRow(new string[] {
                            "true",
                            "true",
                            "true",
                            "true",
                            "true",
                            "true",
                            "MailboxScheduledProject",
                            "ComparisonExpanded"});
#line 308
 testRunner.And("User updates the Apps List page on Self Service tab", ((string)(null)), table3903, "And ");
#line hidden
#line 311
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 312
 testRunner.When("User navigate to \"Project Date\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3904 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowScreen",
                            "ShowComputerNameString",
                            "AllowUsersToAddANote",
                            "MinimumHours",
                            "MaximumHours",
                            "PageDescription"});
                table3904.AddRow(new string[] {
                            "true",
                            "DoNotShow",
                            "true",
                            "10",
                            "100",
                            "MailboxScheduledProject"});
#line 313
 testRunner.And("User updates the Project Date page on Self Service tab", ((string)(null)), table3904, "And ");
#line hidden
#line 316
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 317
 testRunner.When("User navigate to \"Other Options 1\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3905 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowScreen",
                            "AllowUsersToAddANote",
                            "PageDescription"});
                table3905.AddRow(new string[] {
                            "false",
                            "true",
                            "MailboxScheduledProject"});
#line 318
 testRunner.And("User updates the first Other Options page on Self Service tab", ((string)(null)), table3905, "And ");
#line hidden
#line 321
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 322
 testRunner.When("User navigate to \"Other Options 2\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3906 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowScreen",
                            "AllowUsersToAddANote",
                            "PageDescription"});
                table3906.AddRow(new string[] {
                            "false",
                            "true",
                            "MailboxScheduledProject"});
#line 323
 testRunner.And("User updates the second Other Options page on Self Service tab", ((string)(null)), table3906, "And ");
#line hidden
#line 326
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 327
 testRunner.When("User navigate to \"Thank You\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3907 = new TechTalk.SpecFlow.Table(new string[] {
                            "SelfServicePortal",
                            "NavigationMenu",
                            "ChoicesSummary",
                            "IncludeLink",
                            "PageDescription"});
                table3907.AddRow(new string[] {
                            "true",
                            "false",
                            "false",
                            "false",
                            "MailboxScheduledProject"});
#line 328
 testRunner.And("User updates the Thank You page on Self Service tab", ((string)(null)), table3907, "And ");
#line hidden
#line 331
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

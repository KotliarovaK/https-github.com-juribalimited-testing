// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DashworksTestAutomationCore.Tests.Senior.Senior_CreatingProjects
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("CreateComputerScheduledProject", Description="\tRuns Project related tests", SourceFile="Tests\\Senior\\Senior_CreatingProjects\\ComputerScheduledProject.feature", SourceLine=0)]
    public partial class CreateComputerScheduledProjectFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "ComputerScheduledProject.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CreateComputerScheduledProject", "\tRuns Project related tests", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
#line 5
 testRunner.Given("User is logged in to the Projects as Admin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.Then("\"Projects Home\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Projects_CreateComputerScheduledProject", new string[] {
                "ProjectsOnSenior",
                "Projects_Administration",
                "ComputerScheduledProject"}, SourceLine=8)]
        public virtual void Projects_CreateComputerScheduledProject()
        {
            string[] tagsOfScenario = new string[] {
                    "ProjectsOnSenior",
                    "Projects_Administration",
                    "ComputerScheduledProject"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Projects_CreateComputerScheduledProject", null, new string[] {
                        "ProjectsOnSenior",
                        "Projects_Administration",
                        "ComputerScheduledProject"});
#line 9
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
#line 10
 testRunner.When("User clicks create Project button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.Then("\"Create Project\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3747 = new TechTalk.SpecFlow.Table(new string[] {
                            "ProjectName",
                            "ProjectShortName",
                            "ProjectDescription",
                            "ProjectTypeString"});
                table3747.AddRow(new string[] {
                            "000 ComputerScheduledProject",
                            "Computer",
                            "ComputerScheduledProject",
                            "ComputerScheduledProject"});
#line 12
 testRunner.When("User creates Project", ((string)(null)), table3747, "When ");
#line hidden
#line 15
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 16
 testRunner.When("User clicks \"Create Project\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 17
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
 testRunner.Then("\"Manage Project Details\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
 testRunner.When("User navigate to Manage link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 20
 testRunner.And("User select \"Manage Users\" option in Management Console", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3748 = new TechTalk.SpecFlow.Table(new string[] {
                            "Username",
                            "FullName",
                            "Password",
                            "ConfirmPassword",
                            "RolesString"});
                table3748.AddRow(new string[] {
                            "AAA for removing",
                            "for removing",
                            "1234qwer",
                            "1234qwer",
                            ""});
#line 21
 testRunner.Then("User create a new Dashworks User", ((string)(null)), table3748, "Then ");
#line hidden
#line 24
 testRunner.And("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("created User is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.When("User removes created User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 27
 testRunner.Then("selected User was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3749 = new TechTalk.SpecFlow.Table(new string[] {
                            "Username",
                            "FullName",
                            "Password",
                            "ConfirmPassword",
                            "RolesString"});
                table3749.AddRow(new string[] {
                            "AAA0ComputerScheduledProject",
                            "ComputerScheduledProject 0",
                            "1234qwer",
                            "1234qwer",
                            ""});
#line 28
 testRunner.Then("User create a new Dashworks User", ((string)(null)), table3749, "Then ");
#line hidden
#line 31
 testRunner.And("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And("created User is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3750 = new TechTalk.SpecFlow.Table(new string[] {
                            "Username",
                            "FullName",
                            "Password",
                            "ConfirmPassword",
                            "RolesString"});
                table3750.AddRow(new string[] {
                            "AAA1ComputerScheduledProject",
                            "ComputerScheduledProject 1",
                            "1234qwer",
                            "1234qwer",
                            ""});
#line 33
 testRunner.And("User create a new Dashworks User", ((string)(null)), table3750, "And ");
#line hidden
#line 36
 testRunner.And("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("created User is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3751 = new TechTalk.SpecFlow.Table(new string[] {
                            "Username",
                            "FullName",
                            "Password",
                            "ConfirmPassword",
                            "RolesString"});
                table3751.AddRow(new string[] {
                            "AAA2ComputerScheduledProject",
                            "ComputerScheduledProject 2",
                            "1234qwer",
                            "1234qwer",
                            ""});
#line 38
 testRunner.And("User create a new Dashworks User", ((string)(null)), table3751, "And ");
#line hidden
#line 41
 testRunner.And("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And("created User is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.When("User navigate to Dashworks User Site link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 44
 testRunner.And("User navigate to Projects link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.Then("\"Projects Home\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 46
 testRunner.When("User select Project", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 47
 testRunner.Then("User make this Project Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
 testRunner.And("Default Project News Title is displayed correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.And("User navigate to created Project", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
 testRunner.And("\"Manage Project Details\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.And("Project Name is displayed correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3752 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowOriginalColumn",
                            "IncludeSiteName",
                            "NotApplicableApplications",
                            "InstalledApplications",
                            "EntitledApplications",
                            "TaskEmailCcEmailAddress",
                            "TaskEmailBccEmailAddress",
                            "StartDate",
                            "EndDate"});
                table3752.AddRow(new string[] {
                            "true",
                            "true",
                            "true",
                            "true",
                            "true",
                            "TestOne@test.com",
                            "TestTwo@test.com",
                            "8 May 2012",
                            "10 Apr 2018"});
#line 52
 testRunner.When("User updates the Details page", ((string)(null)), table3752, "When ");
#line hidden
#line 55
 testRunner.Then("Success message is displayed with \"Project was successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
 testRunner.Then("CC email field is displayed with \"TestOne@test.com\" text on Senior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 57
 testRunner.Then("BCC email field is displayed with \"TestTwo@test.com\" text on Senior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 58
 testRunner.When("User clears the CC email field on Senior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 59
 testRunner.When("User clears the BCC email field on Senior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 60
 testRunner.And("User clicks \"Update\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
 testRunner.Then("CC email field on Senior is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 62
 testRunner.Then("BCC email field on Senior is empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 64
 testRunner.When("User navigate to \"Request Types\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 65
 testRunner.Then("\"Manage Request Types\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 66
 testRunner.When("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3753 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3753.AddRow(new string[] {
                            "1 TestRequestTypeName",
                            "ComputerScheduledProject 1",
                            "User"});
#line 67
 testRunner.And("User create Request Type", ((string)(null)), table3753, "And ");
#line hidden
#line 70
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 71
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 72
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 73
 testRunner.When("User removes created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 74
 testRunner.And("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3754 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3754.AddRow(new string[] {
                            "2 TestRequestTypeName",
                            "ComputerScheduledProject 2",
                            "Application"});
#line 75
 testRunner.And("User create Request Type", ((string)(null)), table3754, "And ");
#line hidden
#line 78
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 80
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 81
 testRunner.When("User removes created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 82
 testRunner.And("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3755 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3755.AddRow(new string[] {
                            "3 TestRequestTypeName",
                            "ComputerScheduledProject 3",
                            "Computer"});
#line 83
 testRunner.And("User create Request Type", ((string)(null)), table3755, "And ");
#line hidden
#line 86
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 87
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 88
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 89
 testRunner.When("User removes created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 90
 testRunner.And("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3756 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3756.AddRow(new string[] {
                            "1 TestRequestTypeName",
                            "ComputerScheduledProject 1",
                            "User"});
#line 91
 testRunner.And("User create Request Type", ((string)(null)), table3756, "And ");
#line hidden
#line 94
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 95
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 96
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
 testRunner.When("User click on the created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3757 = new TechTalk.SpecFlow.Table(new string[] {
                            "DefaultRequestType"});
                table3757.AddRow(new string[] {
                            "true"});
#line 98
 testRunner.And("User updates the Request Type page", ((string)(null)), table3757, "And ");
#line hidden
#line 101
 testRunner.Then("Success message is displayed with \"Request Type successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 102
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 103
 testRunner.Then("created Request Type is a Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
 testRunner.When("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3758 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3758.AddRow(new string[] {
                            "2 TestRequestTypeName",
                            "ComputerScheduledProject 2",
                            "Application"});
#line 105
 testRunner.And("User create Request Type", ((string)(null)), table3758, "And ");
#line hidden
#line 108
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 109
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 110
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 111
 testRunner.When("User click on the created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3759 = new TechTalk.SpecFlow.Table(new string[] {
                            "DefaultRequestType"});
                table3759.AddRow(new string[] {
                            "true"});
#line 112
 testRunner.And("User updates the Request Type page", ((string)(null)), table3759, "And ");
#line hidden
#line 115
 testRunner.Then("Success message is displayed with \"Request Type successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 116
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 117
 testRunner.Then("created Request Type is a Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 118
 testRunner.When("User clicks \"Create Request Type\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3760 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3760.AddRow(new string[] {
                            "3 TestRequestTypeName",
                            "ComputerScheduledProject 3",
                            "Computer"});
#line 119
 testRunner.And("User create Request Type", ((string)(null)), table3760, "And ");
#line hidden
#line 122
 testRunner.Then("Success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 123
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 124
 testRunner.Then("created Request Type is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 125
 testRunner.When("User click on the created Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3761 = new TechTalk.SpecFlow.Table(new string[] {
                            "DefaultRequestType"});
                table3761.AddRow(new string[] {
                            "true"});
#line 126
 testRunner.And("User updates the Request Type page", ((string)(null)), table3761, "And ");
#line hidden
#line 129
 testRunner.Then("Success message is displayed with \"Request Type successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 130
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 131
 testRunner.Then("created Request Type is a Default", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 133
 testRunner.When("User navigate to \"Categories\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 134
 testRunner.Then("\"Manage Categories\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 135
 testRunner.When("User clicks \"Create Category\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3762 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3762.AddRow(new string[] {
                            "for removing",
                            "ComputerScheduledProject",
                            "Computer"});
#line 136
 testRunner.And("User create Category", ((string)(null)), table3762, "And ");
#line hidden
#line 139
 testRunner.Then("Success message is displayed with \"Category successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 140
 testRunner.When("User clicks \"« Go Back\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 141
 testRunner.Then("created Category is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 142
 testRunner.When("User removes created Category", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 143
 testRunner.Then("selected Category was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 144
 testRunner.When("User clicks \"Create Category\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3763 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3763.AddRow(new string[] {
                            "Computer Category",
                            "ComputerScheduledProject",
                            "Computer"});
#line 145
 testRunner.And("User create Category", ((string)(null)), table3763, "And ");
#line hidden
#line 148
 testRunner.Then("Success message is displayed with \"Category successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 149
 testRunner.When("User clicks \"« Go Back\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 150
 testRunner.Then("created Category is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 151
 testRunner.When("User clicks \"Create Category\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3764 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3764.AddRow(new string[] {
                            "User Category",
                            "ComputerScheduledProject",
                            "User"});
#line 152
 testRunner.And("User create Category", ((string)(null)), table3764, "And ");
#line hidden
#line 155
 testRunner.Then("Success message is displayed with \"Category successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 156
 testRunner.When("User clicks \"« Go Back\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 157
 testRunner.Then("created Category is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 158
 testRunner.When("User clicks \"Create Category\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3765 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "ObjectTypeString"});
                table3765.AddRow(new string[] {
                            "Application Category",
                            "ComputerScheduledProject",
                            "Application"});
#line 159
 testRunner.And("User create Category", ((string)(null)), table3765, "And ");
#line hidden
#line 162
 testRunner.Then("Success message is displayed with \"Category successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 163
 testRunner.When("User clicks \"« Go Back\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 164
 testRunner.Then("created Category is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 166
 testRunner.When("User navigate to \"Stages\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 167
 testRunner.Then("\"Manage Stages\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 168
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3766 = new TechTalk.SpecFlow.Table(new string[] {
                            "StageName"});
                table3766.AddRow(new string[] {
                            "for removing"});
#line 169
 testRunner.And("User create Stage", ((string)(null)), table3766, "And ");
#line hidden
#line 172
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 173
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 174
 testRunner.And("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 175
 testRunner.When("User removes created Stage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 176
 testRunner.Then("selected Stage was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 177
 testRunner.And("Success message is displayed with \"Stage successfully deleted.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 178
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3767 = new TechTalk.SpecFlow.Table(new string[] {
                            "StageName"});
                table3767.AddRow(new string[] {
                            "Stage 1"});
#line 179
 testRunner.And("User create Stage", ((string)(null)), table3767, "And ");
#line hidden
#line 182
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 183
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 184
 testRunner.Then("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 185
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3768 = new TechTalk.SpecFlow.Table(new string[] {
                            "StageName"});
                table3768.AddRow(new string[] {
                            "Stage 2"});
#line 186
 testRunner.And("User create Stage", ((string)(null)), table3768, "And ");
#line hidden
#line 189
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 190
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 191
 testRunner.Then("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 192
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3769 = new TechTalk.SpecFlow.Table(new string[] {
                            "StageName"});
                table3769.AddRow(new string[] {
                            "Stage 3"});
#line 193
 testRunner.And("User create Stage", ((string)(null)), table3769, "And ");
#line hidden
#line 196
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 197
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 198
 testRunner.Then("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 199
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3770 = new TechTalk.SpecFlow.Table(new string[] {
                            "StageName"});
                table3770.AddRow(new string[] {
                            "Stage 4"});
#line 200
 testRunner.And("User create Stage", ((string)(null)), table3770, "And ");
#line hidden
#line 203
 testRunner.When("User clicks \"Create Stage\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 204
 testRunner.Then("Error message is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 205
 testRunner.Then("created Stage is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 207
 testRunner.When("User navigate to \"Mail Templates\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 208
 testRunner.Then("\"Manage Mail Templates\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 209
 testRunner.When("User clicks \"Create Mail Template\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3771 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Description",
                            "SubjectLine",
                            "BodyText"});
                table3771.AddRow(new string[] {
                            "TestMailTemplateName",
                            "ComputerScheduledProject",
                            "TestText",
                            "TestText"});
#line 210
 testRunner.And("User create Mail Template", ((string)(null)), table3771, "And ");
#line hidden
#line 213
 testRunner.Then("Success message is displayed with \"Mail Template successfully created.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 215
 testRunner.When("User navigate to \"Tasks\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 216
 testRunner.Then("\"Manage Tasks\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 217
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3772 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3772.AddRow(new string[] {
                            "for removing",
                            "for removing",
                            "Stage 1",
                            "Normal",
                            "Date",
                            "User",
                            "",
                            "true"});
#line 218
 testRunner.And("User creates Task", ((string)(null)), table3772, "And ");
#line hidden
#line 221
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 222
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 223
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 224
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 225
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 226
 testRunner.When("User removes created Task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 227
 testRunner.Then("selected Task was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 228
 testRunner.And("Success message is displayed with \"Task successfully deleted.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 230
 testRunner.When("User navigate to \"Tasks\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 231
 testRunner.Then("\"Manage Tasks\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 232
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3773 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3773.AddRow(new string[] {
                            "Forecast Date",
                            "Forecast Date",
                            "Stage 1",
                            "Normal",
                            "Date",
                            "Computer",
                            "",
                            "true"});
#line 233
 testRunner.And("User creates Task", ((string)(null)), table3773, "And ");
#line hidden
#line 236
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3774 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3774.AddRow(new string[] {
                            "true",
                            "DateOnly",
                            "ForecastDate",
                            "true",
                            "false",
                            "false",
                            "false"});
#line 237
 testRunner.When("User updates the Task page", ((string)(null)), table3774, "When ");
#line hidden
#line 240
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 241
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 242
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 243
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 244
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 246
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3775 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3775.AddRow(new string[] {
                            "Target Date",
                            "Target Date",
                            "Stage 2",
                            "Normal",
                            "Date",
                            "Computer",
                            "",
                            "true"});
#line 247
 testRunner.And("User creates Task", ((string)(null)), table3775, "And ");
#line hidden
#line 250
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3776 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3776.AddRow(new string[] {
                            "true",
                            "DateOnly",
                            "TargetDate",
                            "false",
                            "false",
                            "false",
                            "false"});
#line 251
 testRunner.When("User updates the Task page", ((string)(null)), table3776, "When ");
#line hidden
#line 254
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 255
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 256
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 257
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 258
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 260
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3777 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3777.AddRow(new string[] {
                            "Scheduled Date",
                            "Scheduled Date",
                            "Stage 3",
                            "Normal",
                            "Date",
                            "Computer",
                            "",
                            "true"});
#line 261
 testRunner.And("User creates Task", ((string)(null)), table3777, "And ");
#line hidden
#line 264
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3778 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3778.AddRow(new string[] {
                            "true",
                            "DateTime",
                            "ScheduledDate",
                            "true",
                            "false",
                            "false",
                            "false"});
#line 265
 testRunner.When("User updates the Task page", ((string)(null)), table3778, "When ");
#line hidden
#line 268
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 269
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 270
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 271
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 272
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 274
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3779 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3779.AddRow(new string[] {
                            "Migrated Date",
                            "Migrated Date",
                            "Stage 4",
                            "Normal",
                            "Date",
                            "Computer",
                            "",
                            "true"});
#line 275
 testRunner.And("User creates Task", ((string)(null)), table3779, "And ");
#line hidden
#line 278
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3780 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3780.AddRow(new string[] {
                            "true",
                            "DateTime",
                            "MigratedDate",
                            "false",
                            "true",
                            "false",
                            "true"});
#line 279
 testRunner.When("User updates the Task page", ((string)(null)), table3780, "When ");
#line hidden
#line 282
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 283
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 284
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 285
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 286
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 288
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3781 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3781.AddRow(new string[] {
                            "Completed Date",
                            "Completed Date",
                            "Stage 4",
                            "Normal",
                            "Date",
                            "Computer",
                            "",
                            "true"});
#line 289
 testRunner.And("User creates Task", ((string)(null)), table3781, "And ");
#line hidden
#line 292
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3782 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3782.AddRow(new string[] {
                            "true",
                            "DateOnly",
                            "CompletedDate",
                            "true",
                            "true",
                            "false",
                            "true"});
#line 293
 testRunner.When("User updates the Task page", ((string)(null)), table3782, "When ");
#line hidden
#line 296
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 297
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 298
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 299
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 300
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 302
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3783 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3783.AddRow(new string[] {
                            "Group Date Task",
                            "Group Date Task",
                            "Stage 1",
                            "Group",
                            "Date",
                            "Computer",
                            "",
                            "true"});
#line 303
 testRunner.And("User creates Task", ((string)(null)), table3783, "And ");
#line hidden
#line 306
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3784 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "BulkUpdate",
                            "GroupTaskDashboard"});
                table3784.AddRow(new string[] {
                            "true",
                            "DateOnly",
                            "None",
                            "true",
                            "false",
                            "true"});
#line 307
 testRunner.When("User updates the Task page", ((string)(null)), table3784, "When ");
#line hidden
#line 310
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 311
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 312
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 313
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 314
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 316
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3785 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3785.AddRow(new string[] {
                            "Text Task",
                            "Text Task",
                            "Stage 2",
                            "Normal",
                            "Text",
                            "Computer",
                            "",
                            "true"});
#line 317
 testRunner.And("User creates Task", ((string)(null)), table3785, "And ");
#line hidden
#line 320
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3786 = new TechTalk.SpecFlow.Table(new string[] {
                            "TextModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3786.AddRow(new string[] {
                            "SingleLine",
                            "",
                            "true",
                            "false",
                            "false",
                            "false"});
#line 321
 testRunner.When("User updates the Task page", ((string)(null)), table3786, "When ");
#line hidden
#line 324
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 325
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 326
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 327
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 328
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 330
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3787 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3787.AddRow(new string[] {
                            "Radiobutton RAG Owner Date",
                            "Radiobutton RAG Owner Date",
                            "Stage 3",
                            "Normal",
                            "Radiobutton",
                            "Computer",
                            "ReadinessNnsfcWithDueDateOwner",
                            "true"});
#line 331
 testRunner.And("User creates Task", ((string)(null)), table3787, "And ");
#line hidden
#line 334
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3788 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "TaskHasAnOwner",
                            "TaskImpactsReadiness",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3788.AddRow(new string[] {
                            "true",
                            "DateOnly",
                            "None",
                            "true",
                            "true",
                            "true",
                            "false",
                            "false",
                            "false"});
#line 335
 testRunner.When("User updates the Task page", ((string)(null)), table3788, "When ");
#line hidden
#line 338
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 339
 testRunner.When("User navigate to \"Values\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 340
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3789 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3789.AddRow(new string[] {
                            "Blocked",
                            "Open",
                            "false"});
#line 341
 testRunner.And("User create new Value", ((string)(null)), table3789, "And ");
#line hidden
#line 344
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 345
 testRunner.And("User navigates to \"Not Started\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3790 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3790.AddRow(new string[] {
                            "",
                            "",
                            "true"});
#line 346
 testRunner.And("User edit selected Value", ((string)(null)), table3790, "And ");
#line hidden
#line 349
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 350
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 351
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 352
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 353
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 354
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 356
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3791 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3791.AddRow(new string[] {
                            "Dropdown Non RAG Owner",
                            "Dropdown Non RAG Owner",
                            "Stage 4",
                            "Normal",
                            "DropDownList",
                            "Computer",
                            "NoReadinessNaEnabledDisabled",
                            "true"});
#line 357
 testRunner.And("User creates Task", ((string)(null)), table3791, "And ");
#line hidden
#line 360
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3792 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "TaskHasAnOwner",
                            "TaskImpactsReadiness",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3792.AddRow(new string[] {
                            "false",
                            "",
                            "Workflow",
                            "false",
                            "false",
                            "true",
                            "false",
                            "false",
                            "false"});
#line 361
 testRunner.When("User updates the Task page", ((string)(null)), table3792, "When ");
#line hidden
#line 364
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 365
 testRunner.When("User navigate to \"Values\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 366
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3793 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3793.AddRow(new string[] {
                            "None",
                            "Closed",
                            "false"});
#line 367
 testRunner.And("User create new Value", ((string)(null)), table3793, "And ");
#line hidden
#line 370
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 371
 testRunner.And("User navigates to \"Enabled\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3794 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3794.AddRow(new string[] {
                            "",
                            "Open",
                            "true"});
#line 372
 testRunner.And("User edit selected Value", ((string)(null)), table3794, "And ");
#line hidden
#line 375
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 376
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 377
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 378
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 379
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 380
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 382
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3795 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3795.AddRow(new string[] {
                            "Group Radiobutton RAG Date Time Owner",
                            "Group Radiobutton RAG Date Time Owner",
                            "Stage 2",
                            "Group",
                            "Radiobutton",
                            "Computer",
                            "ReadinessNnsfcWithDueDateOwner",
                            "true"});
#line 383
 testRunner.And("User creates Task", ((string)(null)), table3795, "And ");
#line hidden
#line 386
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3796 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "TaskHasAnOwner",
                            "TaskImpactsReadiness",
                            "ShowDetails",
                            "GroupTaskDashboard",
                            "BulkUpdate"});
                table3796.AddRow(new string[] {
                            "false",
                            "DateTime",
                            "None",
                            "true",
                            "true",
                            "true",
                            "false",
                            "true"});
#line 387
 testRunner.When("User updates the Task page", ((string)(null)), table3796, "When ");
#line hidden
#line 390
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 391
 testRunner.When("User navigate to \"Values\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 392
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3797 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3797.AddRow(new string[] {
                            "Unknown",
                            "Open",
                            "true"});
#line 393
 testRunner.And("User create new Value", ((string)(null)), table3797, "And ");
#line hidden
#line 396
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 397
 testRunner.And("User navigates to \"Not Applicable\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3798 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3798.AddRow(new string[] {
                            "N/A",
                            "",
                            "false"});
#line 398
 testRunner.And("User edit selected Value", ((string)(null)), table3798, "And ");
#line hidden
#line 401
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 402
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 403
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 404
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 405
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 406
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 408
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3799 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3799.AddRow(new string[] {
                            "Dropdown RAG Date & Time",
                            "Dropdown RAG Date & Time",
                            "Stage 3",
                            "Normal",
                            "DropDownList",
                            "Computer",
                            "ReadinessNnsfcWithDueDate",
                            "false"});
#line 409
 testRunner.And("User creates Task", ((string)(null)), table3799, "And ");
#line hidden
#line 412
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3800 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "TaskHasAnOwner",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3800.AddRow(new string[] {
                            "true",
                            "DateTime",
                            "None",
                            "true",
                            "false",
                            "false",
                            "false",
                            "true"});
#line 413
 testRunner.When("User updates the Task page", ((string)(null)), table3800, "When ");
#line hidden
#line 416
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 417
 testRunner.When("User navigate to \"Request Types\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 418
 testRunner.Then("\"Edit Task\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 419
 testRunner.When("User select \"3 TestRequestTypeName\" Request Type on Task page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 420
 testRunner.And("User save selected Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 421
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 422
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 423
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 424
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 425
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 427
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3801 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3801.AddRow(new string[] {
                            "Text Task (User)",
                            "Text Task (User)",
                            "Stage 1",
                            "Normal",
                            "Text",
                            "User",
                            "",
                            "true"});
#line 428
 testRunner.And("User creates Task", ((string)(null)), table3801, "And ");
#line hidden
#line 431
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3802 = new TechTalk.SpecFlow.Table(new string[] {
                            "TextModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3802.AddRow(new string[] {
                            "MultipleLine",
                            "EmailAddressUser",
                            "true",
                            "false",
                            "false",
                            "false"});
#line 432
 testRunner.When("User updates the Task page", ((string)(null)), table3802, "When ");
#line hidden
#line 435
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 436
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 437
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 438
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 439
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 441
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3803 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3803.AddRow(new string[] {
                            "Radiobutton RAG Owner Date (User)",
                            "Radiobutton RAG Owner Date (User)",
                            "Stage 2",
                            "Normal",
                            "Radiobutton",
                            "User",
                            "ReadinessNnsfcWithDueDate",
                            "true"});
#line 442
 testRunner.And("User creates Task", ((string)(null)), table3803, "And ");
#line hidden
#line 445
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3804 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "TaskImpactsReadiness",
                            "TaskHasAnOwner",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3804.AddRow(new string[] {
                            "true",
                            "DateTime",
                            "SelfServiceEnabledUserMode",
                            "true",
                            "true",
                            "true",
                            "false",
                            "false",
                            "false"});
#line 446
 testRunner.When("User updates the Task page", ((string)(null)), table3804, "When ");
#line hidden
#line 449
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 450
 testRunner.When("User navigate to \"Value\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 451
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3805 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3805.AddRow(new string[] {
                            "Blocked",
                            "Open",
                            "false"});
#line 452
 testRunner.And("User create new Value", ((string)(null)), table3805, "And ");
#line hidden
#line 455
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 456
 testRunner.And("User navigates to \"Not Started\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3806 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3806.AddRow(new string[] {
                            "To Be Started",
                            "",
                            "true"});
#line 457
 testRunner.And("User edit selected Value", ((string)(null)), table3806, "And ");
#line hidden
#line 460
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 461
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 462
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 463
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 464
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 465
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 467
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3807 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3807.AddRow(new string[] {
                            "Group Dropdown RAG (User)",
                            "Group Dropdown RAG (User)",
                            "Stage 3",
                            "Group",
                            "DropDownList",
                            "User",
                            "ReadinessNnsfc",
                            "false"});
#line 468
 testRunner.And("User creates Task", ((string)(null)), table3807, "And ");
#line hidden
#line 471
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3808 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "TaskImpactsReadiness",
                            "ShowDetails",
                            "BulkUpdate",
                            "GroupTaskDashboard"});
                table3808.AddRow(new string[] {
                            "false",
                            "",
                            "EmailNotificationsUser",
                            "true",
                            "true",
                            "false",
                            "false"});
#line 472
 testRunner.When("User updates the Task page", ((string)(null)), table3808, "When ");
#line hidden
#line 475
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 476
 testRunner.When("User navigate to \"Value\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 477
 testRunner.And("User navigates to \"Complete\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3809 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3809.AddRow(new string[] {
                            "Finished",
                            "",
                            "false"});
#line 478
 testRunner.And("User edit selected Value", ((string)(null)), table3809, "And ");
#line hidden
#line 481
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 482
 testRunner.And("User navigate to \"Request Types\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 483
 testRunner.Then("\"Edit Task\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 484
 testRunner.When("User select \"[Default (User)]\" Request Type on Task page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 485
 testRunner.And("User save selected Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 486
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 487
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 488
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 489
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 490
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 492
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3810 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3810.AddRow(new string[] {
                            "Date Task (User)",
                            "Date Task (User)",
                            "Stage 4",
                            "Normal",
                            "Date",
                            "User",
                            "",
                            "true"});
#line 493
 testRunner.And("User creates Task", ((string)(null)), table3810, "And ");
#line hidden
#line 496
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3811 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3811.AddRow(new string[] {
                            "true",
                            "",
                            "SelfServiceProjectDateCompletedDateUserMode",
                            "false",
                            "true",
                            "true",
                            "false"});
#line 497
 testRunner.When("User updates the Task page", ((string)(null)), table3811, "When ");
#line hidden
#line 500
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 501
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 502
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 503
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 504
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 506
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3812 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3812.AddRow(new string[] {
                            "Radiobutton Non RAG Owner Date (Application)",
                            "Radiobutton Non RAG Owner Date (Application)",
                            "Stage 1",
                            "Normal",
                            "Radiobutton",
                            "Application",
                            "NoReadinessNnsfcWithDueDateOwner",
                            "true"});
#line 507
 testRunner.And("User creates Task", ((string)(null)), table3812, "And ");
#line hidden
#line 510
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3813 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3813.AddRow(new string[] {
                            "true",
                            "DateTime",
                            "Workflow",
                            "true",
                            "false",
                            "false",
                            "false"});
#line 511
 testRunner.When("User updates the Task page", ((string)(null)), table3813, "When ");
#line hidden
#line 514
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 515
 testRunner.When("User navigate to \"Value\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 516
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3814 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3814.AddRow(new string[] {
                            "Unknown",
                            "Open",
                            "true"});
#line 517
 testRunner.And("User create new Value", ((string)(null)), table3814, "And ");
#line hidden
#line 520
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 521
 testRunner.And("User navigates to \"Started\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3815 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3815.AddRow(new string[] {
                            "In Progress",
                            "",
                            "false"});
#line 522
 testRunner.And("User edit selected Value", ((string)(null)), table3815, "And ");
#line hidden
#line 525
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 526
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 527
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 528
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 529
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 530
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 532
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3816 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3816.AddRow(new string[] {
                            "Dropdown RAG Owner (Application)",
                            "Dropdown RAG Owner (Application)",
                            "Stage 2",
                            "Normal",
                            "DropDownList",
                            "Application",
                            "ReadinessNnsfc",
                            "false"});
#line 533
 testRunner.And("User creates Task", ((string)(null)), table3816, "And ");
#line hidden
#line 536
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3817 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "TaskImpactsReadiness",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3817.AddRow(new string[] {
                            "false",
                            "",
                            "None",
                            "true",
                            "true",
                            "false",
                            "false",
                            "true"});
#line 537
 testRunner.When("User updates the Task page", ((string)(null)), table3817, "When ");
#line hidden
#line 540
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 541
 testRunner.When("User navigate to \"Value\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 542
 testRunner.And("User clicks \"Add value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3818 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3818.AddRow(new string[] {
                            "Under Investigation",
                            "Open",
                            "false"});
#line 543
 testRunner.And("User create new Value", ((string)(null)), table3818, "And ");
#line hidden
#line 546
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 547
 testRunner.And("User navigates to \"Not Applicable (Default)\" Value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3819 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "TaskStatusString",
                            "DefaultValue"});
                table3819.AddRow(new string[] {
                            "N/A",
                            "",
                            "true"});
#line 548
 testRunner.And("User edit selected Value", ((string)(null)), table3819, "And ");
#line hidden
#line 551
 testRunner.And("User clicks \"Save Value\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 552
 testRunner.And("User navigate to \"Request Types\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 553
 testRunner.Then("\"Edit Task\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 554
 testRunner.When("User select \"2 TestRequestTypeName\" Request Type on Task page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 555
 testRunner.And("User save selected Request Type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 556
 testRunner.When("User navigate to \"Details\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 557
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 558
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 559
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 560
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 562
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3820 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3820.AddRow(new string[] {
                            "Application Delivery Date",
                            "Application Delivery Date",
                            "Stage 3",
                            "Normal",
                            "Date",
                            "Application",
                            "",
                            "true"});
#line 563
 testRunner.And("User creates Task", ((string)(null)), table3820, "And ");
#line hidden
#line 566
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3821 = new TechTalk.SpecFlow.Table(new string[] {
                            "TaskHaADueDate",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3821.AddRow(new string[] {
                            "true",
                            "DateOnly",
                            "ApplicationDeliveryDate",
                            "true",
                            "false",
                            "false",
                            "false"});
#line 567
 testRunner.When("User updates the Task page", ((string)(null)), table3821, "When ");
#line hidden
#line 570
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 571
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 572
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 573
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 574
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 576
 testRunner.When("User clicks \"Create Task\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3822 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Help",
                            "StagesNameString",
                            "TaskTypeString",
                            "ValueTypeString",
                            "ObjectTypeString",
                            "TaskValuesTemplateString",
                            "ApplyToAllCheckbox"});
                table3822.AddRow(new string[] {
                            "Text Task (Application)",
                            "Text Task (Application)",
                            "Stage 4",
                            "Normal",
                            "Text",
                            "Application",
                            "",
                            "true"});
#line 577
 testRunner.And("User creates Task", ((string)(null)), table3822, "And ");
#line hidden
#line 580
 testRunner.Then("Success message is displayed with \"Task successfully created\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3823 = new TechTalk.SpecFlow.Table(new string[] {
                            "TextModeString",
                            "DateModeString",
                            "TaskProjectRoleString",
                            "ShowDetails",
                            "ProjectObject",
                            "BulkUpdate",
                            "SelfService"});
                table3823.AddRow(new string[] {
                            "SingleLine",
                            "",
                            "DeploymentTarget",
                            "true",
                            "false",
                            "false",
                            "true"});
#line 581
 testRunner.When("User updates the Task page", ((string)(null)), table3823, "When ");
#line hidden
#line 584
 testRunner.Then("Success message is displayed with \"Task successfully updated\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 585
 testRunner.When("User publishes the task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 586
 testRunner.Then("selected task was published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 587
 testRunner.When("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 588
 testRunner.Then("created Task is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 590
 testRunner.When("User navigate to \"Teams\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 591
 testRunner.Then("\"Manage Teams\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 592
 testRunner.When("User clicks \"Create Team\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3824 = new TechTalk.SpecFlow.Table(new string[] {
                            "TeamName",
                            "ShortDescription"});
                table3824.AddRow(new string[] {
                            "000 for removing",
                            "for removing"});
#line 593
 testRunner.And("User create Team", ((string)(null)), table3824, "And ");
#line hidden
#line 596
 testRunner.And("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 597
 testRunner.Then("created Team is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 598
 testRunner.When("User removes created Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 599
 testRunner.Then("selected Team was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 600
 testRunner.When("User clicks \"Create Team\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3825 = new TechTalk.SpecFlow.Table(new string[] {
                            "TeamName",
                            "ShortDescription"});
                table3825.AddRow(new string[] {
                            "000 ComputerScheduledProject",
                            "TestText 0"});
#line 601
 testRunner.And("User create Team", ((string)(null)), table3825, "And ");
#line hidden
#line 604
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 605
 testRunner.And("User select user with \"Admin\" name to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 606
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 607
 testRunner.And("User select \"1\" user to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 608
 testRunner.And("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 609
 testRunner.Then("created Team is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 610
 testRunner.And("\"2\" number of Members is displayed for created Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 611
 testRunner.When("User clicks \"Create Team\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3826 = new TechTalk.SpecFlow.Table(new string[] {
                            "TeamName",
                            "ShortDescription"});
                table3826.AddRow(new string[] {
                            "001 ComputerScheduledProject",
                            "TestText 1"});
#line 612
 testRunner.And("User create Team", ((string)(null)), table3826, "And ");
#line hidden
#line 615
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 616
 testRunner.And("User select user with \"Admin\" name to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 617
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 618
 testRunner.And("User select \"2\" user to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 619
 testRunner.And("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 620
 testRunner.Then("created Team is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 621
 testRunner.And("\"2\" number of Members is displayed for created Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 622
 testRunner.When("User clicks \"Create Team\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3827 = new TechTalk.SpecFlow.Table(new string[] {
                            "TeamName",
                            "ShortDescription"});
                table3827.AddRow(new string[] {
                            "002 ComputerScheduledProject",
                            "TestText 2"});
#line 623
 testRunner.And("User create Team", ((string)(null)), table3827, "And ");
#line hidden
#line 626
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 627
 testRunner.And("User select user with \"Admin\" name to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 628
 testRunner.And("User clicks \"Add Member\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 629
 testRunner.And("User select \"3\" user to add as member", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 630
 testRunner.And("User clicks \"Cancel\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 631
 testRunner.Then("created Team is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 632
 testRunner.And("\"2\" number of Members is displayed for created Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 634
 testRunner.When("User navigate to \"Groups\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 635
 testRunner.Then("\"Manage Groups\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 636
 testRunner.When("User clicks \"Create Group\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3828 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName"});
                table3828.AddRow(new string[] {
                            "for removing"});
#line 637
 testRunner.And("User create Group owned for \"1\" Team", ((string)(null)), table3828, "And ");
#line hidden
#line 640
 testRunner.Then("created Group is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 641
 testRunner.When("User removes created Group", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 642
 testRunner.Then("selected Group was removed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 643
 testRunner.When("User clicks \"Create Group\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3829 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName"});
                table3829.AddRow(new string[] {
                            "0 ComputerScheduledProject"});
#line 644
 testRunner.And("User create Group owned for \"1\" Team", ((string)(null)), table3829, "And ");
#line hidden
#line 647
 testRunner.Then("created Group is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 648
 testRunner.When("User clicks \"Create Group\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3830 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName"});
                table3830.AddRow(new string[] {
                            "1 ComputerScheduledProject"});
#line 649
 testRunner.And("User create Group owned for \"2\" Team", ((string)(null)), table3830, "And ");
#line hidden
#line 652
 testRunner.Then("created Group is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 653
 testRunner.When("User clicks \"Create Group\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3831 = new TechTalk.SpecFlow.Table(new string[] {
                            "GroupName"});
                table3831.AddRow(new string[] {
                            "2 ComputerScheduledProject"});
#line 654
 testRunner.And("User create Group owned for \"3\" Team", ((string)(null)), table3831, "And ");
#line hidden
#line 657
 testRunner.Then("created Group is displayed in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 658
 testRunner.When("User navigate to \"Teams\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 659
 testRunner.Then("\"Manage Teams\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 660
 testRunner.And("\"1\" number of Groups is displayed for \"3\" Team", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 662
 testRunner.When("User navigate to \"News\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 663
 testRunner.Then("\"Manage News\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3832 = new TechTalk.SpecFlow.Table(new string[] {
                            "Title",
                            "Text"});
                table3832.AddRow(new string[] {
                            "ComputerScheduledProject",
                            "TestText"});
#line 664
 testRunner.When("User updating News page", ((string)(null)), table3832, "When ");
#line hidden
#line 667
 testRunner.Then("Success message is displayed with \"Project news was successfully updated.\" text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 669
 testRunner.When("User navigate to \"Self Service\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 670
 testRunner.Then("\"Manage Self Service\" page is displayed to the user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3833 = new TechTalk.SpecFlow.Table(new string[] {
                            "EnableSelfServicePortal",
                            "AllowAnonymousUsers",
                            "ThisProjectDefault",
                            "Mode1",
                            "Mode2",
                            "BaseUrl",
                            "NoLink",
                            "DashworksProjectHomepage",
                            "CustomUrl",
                            "CustomUrlTextField"});
                table3833.AddRow(new string[] {
                            "true",
                            "true",
                            "true",
                            "false",
                            "true",
                            "http://automation.corp.juriba.com",
                            "false",
                            "false",
                            "true",
                            "http://www.juriba.com"});
#line 671
 testRunner.When("User updates the Details page on Self Service tab", ((string)(null)), table3833, "When ");
#line hidden
#line 674
 testRunner.When("User navigate to \"Welcome\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 675
 testRunner.When("User adds to object details \"Attribute\" type with \"Manufacturer\" field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 676
 testRunner.When("User adds to object details \"Attribute\" type with \"Department\" field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 677
 testRunner.When("User adds to object details \"Attribute\" type with \"Model\" field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 678
 testRunner.When("User clicks \"Update\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 679
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3834 = new TechTalk.SpecFlow.Table(new string[] {
                            "AllowUsersToSearch",
                            "AllowToChangeLanguage",
                            "ShowProjectSelector",
                            "ShowObjectDetails",
                            "ShowMoreDetailsLink",
                            "PageDescription",
                            "ProjectName"});
                table3834.AddRow(new string[] {
                            "true",
                            "true",
                            "true",
                            "true",
                            "true",
                            "TestText",
                            "ComputerScheduledProject"});
#line 680
 testRunner.When("User updates the Welcome page on Self Service tab", ((string)(null)), table3834, "When ");
#line hidden
#line 683
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 684
 testRunner.When("User navigate to \"Computer Ownership\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3835 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowScreen",
                            "NamefromHttpString",
                            "ShowCategory",
                            "UsersOfTheComputer",
                            "OwnerOfTheComputer",
                            "AllowUsersToChangeUsers",
                            "AllowUsersToAddANote",
                            "LimitMaximum",
                            "LimitMinimum",
                            "PageDescription"});
                table3835.AddRow(new string[] {
                            "true",
                            "RemoteHost",
                            "true",
                            "true",
                            "true",
                            "true",
                            "true",
                            "100",
                            "10",
                            "ComputerScheduledProject"});
#line 685
 testRunner.And("User updates the Ownership page on Self Service tab", ((string)(null)), table3835, "And ");
#line hidden
#line 688
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 689
 testRunner.When("User navigate to \"Department and Location\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3836 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowScreen",
                            "ShowDepartmentFullPath",
                            "ShowLocationFullPath",
                            "AllowUsersToAddANote",
                            "Department",
                            "Location"});
                table3836.AddRow(new string[] {
                            "true",
                            "false",
                            "false",
                            "true",
                            "false",
                            "false"});
#line 690
 testRunner.And("User updates the Department and Location page on Self Service tab", ((string)(null)), table3836, "And ");
#line hidden
#line 693
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 694
 testRunner.When("User navigate to \"Apps List\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3837 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowThisScreen",
                            "ShowCoreApps",
                            "ShowTargetStateReadiness",
                            "ShowRequiredColumnAndSticky",
                            "AllowUsersToAddANote",
                            "ViewString",
                            "PageDescription"});
                table3837.AddRow(new string[] {
                            "true",
                            "true",
                            "true",
                            "true",
                            "true",
                            "Comparison",
                            "ComputerScheduledProject"});
#line 695
 testRunner.And("User updates the Apps List page on Self Service tab", ((string)(null)), table3837, "And ");
#line hidden
#line 698
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 699
 testRunner.When("User navigate to \"Project Date\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 700
 testRunner.When("User selects \"Scheduled Date\" Task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 701
 testRunner.When("User adds \"Group Date Task\" Additional Task", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 702
 testRunner.When("User clicks \"Update\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3838 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowThisScreen",
                            "ShowComputerNameString",
                            "AllowUsersToAddANote",
                            "MinimumHours",
                            "MaximumHours",
                            "PageDescription"});
                table3838.AddRow(new string[] {
                            "true",
                            "XForwardedFor",
                            "true",
                            "10",
                            "100",
                            "ComputerScheduledProject"});
#line 703
 testRunner.And("User updates the Project Date page on Self Service tab", ((string)(null)), table3838, "And ");
#line hidden
#line 706
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 707
 testRunner.When("User navigate to \"Other Options 1\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 708
 testRunner.When("User adds \"Dropdown Non RAG Owner\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 709
 testRunner.When("User adds \"Radiobutton RAG Owner Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 710
 testRunner.When("User adds \"Group Radiobutton RAG Date Time Owner\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 711
 testRunner.When("User adds \"Text Task\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 712
 testRunner.When("User clicks \"Update\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3839 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowScreen",
                            "AllowUsersToAddANote",
                            "PageDescription"});
                table3839.AddRow(new string[] {
                            "true",
                            "true",
                            "ComputerScheduledProject"});
#line 713
 testRunner.And("User updates the first Other Options page on Self Service tab", ((string)(null)), table3839, "And ");
#line hidden
#line 716
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 717
 testRunner.When("User navigate to \"Other Options 2\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 718
 testRunner.When("User adds \"Target Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 719
 testRunner.When("User adds \"Forecast Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 720
 testRunner.When("User adds \"Scheduled Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 721
 testRunner.When("User adds \"Migrated Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 722
 testRunner.When("User adds \"Completed Date\" Linked Object Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 723
 testRunner.When("User clicks \"Update\" button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3840 = new TechTalk.SpecFlow.Table(new string[] {
                            "ShowScreen",
                            "AllowUsersToAddANote",
                            "PageDescription"});
                table3840.AddRow(new string[] {
                            "true",
                            "true",
                            "ComputerScheduledProject"});
#line 724
 testRunner.And("User updates the second Other Options page on Self Service tab", ((string)(null)), table3840, "And ");
#line hidden
#line 727
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 728
 testRunner.When("User navigate to \"Thank You\" page on Self Service tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table3841 = new TechTalk.SpecFlow.Table(new string[] {
                            "SelfServicePortal",
                            "NavigationMenu",
                            "ChoicesSummary",
                            "IncludeLink",
                            "PageDescription"});
                table3841.AddRow(new string[] {
                            "true",
                            "true",
                            "true",
                            "true",
                            "ComputerScheduledProject"});
#line 729
 testRunner.And("User updates the Thank You page on Self Service tab", ((string)(null)), table3841, "And ");
#line hidden
#line 732
 testRunner.Then("Success message is displayed with \"Self Service Screen successfully updated\" text" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
